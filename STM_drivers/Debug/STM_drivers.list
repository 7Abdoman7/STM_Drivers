
STM_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000758  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000888  08000890  00010890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000888  08000888  00010890  2**0
                  CONTENTS
  4 .ARM          00000000  08000888  08000888  00010890  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000888  08000890  00010890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000888  08000888  00010888  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800088c  0800088c  0001088c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000890  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000890  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010890  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b2e  00000000  00000000  000108b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000002a6  00000000  00000000  000113e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00011690  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000070  00000000  00000000  00011738  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000c46  00000000  00000000  000117a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000003f6  00000000  00000000  000123ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000038e9  00000000  00000000  000127e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000160cd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000164  00000000  00000000  00016148  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000870 	.word	0x08000870

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000870 	.word	0x08000870

08000170 <MCAL_GPIO_voidInit>:
 *      Author: Abdo
 */

#include "GPIO_Interface.h"

void MCAL_GPIO_voidInit(GPIO_Config_t * config) {
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
	GPIO_RegDef_t* gpioTemp;

	switch (config->port) {
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	781b      	ldrb	r3, [r3, #0]
 800017c:	2b01      	cmp	r3, #1
 800017e:	d006      	beq.n	800018e <MCAL_GPIO_voidInit+0x1e>
 8000180:	2b02      	cmp	r3, #2
 8000182:	d007      	beq.n	8000194 <MCAL_GPIO_voidInit+0x24>
 8000184:	2b00      	cmp	r3, #0
 8000186:	d108      	bne.n	800019a <MCAL_GPIO_voidInit+0x2a>
		case (PORTA):
			gpioTemp = GPIOA;
 8000188:	4b96      	ldr	r3, [pc, #600]	; (80003e4 <MCAL_GPIO_voidInit+0x274>)
 800018a:	60fb      	str	r3, [r7, #12]
		break;
 800018c:	e005      	b.n	800019a <MCAL_GPIO_voidInit+0x2a>
		case (PORTB):
			gpioTemp = GPIOB;
 800018e:	4b96      	ldr	r3, [pc, #600]	; (80003e8 <MCAL_GPIO_voidInit+0x278>)
 8000190:	60fb      	str	r3, [r7, #12]
		break;
 8000192:	e002      	b.n	800019a <MCAL_GPIO_voidInit+0x2a>
		case (PORTC):
			gpioTemp = GPIOC;
 8000194:	4b95      	ldr	r3, [pc, #596]	; (80003ec <MCAL_GPIO_voidInit+0x27c>)
 8000196:	60fb      	str	r3, [r7, #12]
		break;
 8000198:	bf00      	nop
	}

	if (config->pinNumber < 8) {
 800019a:	687b      	ldr	r3, [r7, #4]
 800019c:	785b      	ldrb	r3, [r3, #1]
 800019e:	2b07      	cmp	r3, #7
 80001a0:	f200 8126 	bhi.w	80003f0 <MCAL_GPIO_voidInit+0x280>
		if (config->mode == GPIO_MODE_INPUT_FLOATING) {
 80001a4:	687b      	ldr	r3, [r7, #4]
 80001a6:	789b      	ldrb	r3, [r3, #2]
 80001a8:	2b00      	cmp	r3, #0
 80001aa:	d117      	bne.n	80001dc <MCAL_GPIO_voidInit+0x6c>
			gpioTemp->CRL &= ~(0b11 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001ac:	68fb      	ldr	r3, [r7, #12]
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	687a      	ldr	r2, [r7, #4]
 80001b2:	7852      	ldrb	r2, [r2, #1]
 80001b4:	0092      	lsls	r2, r2, #2
 80001b6:	2103      	movs	r1, #3
 80001b8:	fa01 f202 	lsl.w	r2, r1, r2
 80001bc:	43d2      	mvns	r2, r2
 80001be:	401a      	ands	r2, r3
 80001c0:	68fb      	ldr	r3, [r7, #12]
 80001c2:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b01 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001c4:	68fb      	ldr	r3, [r7, #12]
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	687a      	ldr	r2, [r7, #4]
 80001ca:	7852      	ldrb	r2, [r2, #1]
 80001cc:	0092      	lsls	r2, r2, #2
 80001ce:	2101      	movs	r1, #1
 80001d0:	fa01 f202 	lsl.w	r2, r1, r2
 80001d4:	431a      	orrs	r2, r3
 80001d6:	68fb      	ldr	r3, [r7, #12]
 80001d8:	601a      	str	r2, [r3, #0]
			gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
			gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
			gpioTemp->CRH |= (0b11 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
		}
	}
}
 80001da:	e238      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_INPUT_PULLUP) {
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	789b      	ldrb	r3, [r3, #2]
 80001e0:	2b01      	cmp	r3, #1
 80001e2:	d121      	bne.n	8000228 <MCAL_GPIO_voidInit+0xb8>
			gpioTemp->CRL &= ~(0b11 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001e4:	68fb      	ldr	r3, [r7, #12]
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	687a      	ldr	r2, [r7, #4]
 80001ea:	7852      	ldrb	r2, [r2, #1]
 80001ec:	0092      	lsls	r2, r2, #2
 80001ee:	2103      	movs	r1, #3
 80001f0:	fa01 f202 	lsl.w	r2, r1, r2
 80001f4:	43d2      	mvns	r2, r2
 80001f6:	401a      	ands	r2, r3
 80001f8:	68fb      	ldr	r3, [r7, #12]
 80001fa:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b10 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001fc:	68fb      	ldr	r3, [r7, #12]
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	687a      	ldr	r2, [r7, #4]
 8000202:	7852      	ldrb	r2, [r2, #1]
 8000204:	0092      	lsls	r2, r2, #2
 8000206:	2102      	movs	r1, #2
 8000208:	fa01 f202 	lsl.w	r2, r1, r2
 800020c:	431a      	orrs	r2, r3
 800020e:	68fb      	ldr	r3, [r7, #12]
 8000210:	601a      	str	r2, [r3, #0]
			SET_BIT(gpioTemp->ODR, config->pinNumber);
 8000212:	68fb      	ldr	r3, [r7, #12]
 8000214:	68db      	ldr	r3, [r3, #12]
 8000216:	687a      	ldr	r2, [r7, #4]
 8000218:	7852      	ldrb	r2, [r2, #1]
 800021a:	4611      	mov	r1, r2
 800021c:	2201      	movs	r2, #1
 800021e:	408a      	lsls	r2, r1
 8000220:	431a      	orrs	r2, r3
 8000222:	68fb      	ldr	r3, [r7, #12]
 8000224:	60da      	str	r2, [r3, #12]
}
 8000226:	e212      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_INPUT_PULLDOWN) {
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	789b      	ldrb	r3, [r3, #2]
 800022c:	2b02      	cmp	r3, #2
 800022e:	d122      	bne.n	8000276 <MCAL_GPIO_voidInit+0x106>
			gpioTemp->CRL &= ~(0b11 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000230:	68fb      	ldr	r3, [r7, #12]
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	687a      	ldr	r2, [r7, #4]
 8000236:	7852      	ldrb	r2, [r2, #1]
 8000238:	0092      	lsls	r2, r2, #2
 800023a:	2103      	movs	r1, #3
 800023c:	fa01 f202 	lsl.w	r2, r1, r2
 8000240:	43d2      	mvns	r2, r2
 8000242:	401a      	ands	r2, r3
 8000244:	68fb      	ldr	r3, [r7, #12]
 8000246:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b10 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000248:	68fb      	ldr	r3, [r7, #12]
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	687a      	ldr	r2, [r7, #4]
 800024e:	7852      	ldrb	r2, [r2, #1]
 8000250:	0092      	lsls	r2, r2, #2
 8000252:	2102      	movs	r1, #2
 8000254:	fa01 f202 	lsl.w	r2, r1, r2
 8000258:	431a      	orrs	r2, r3
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	601a      	str	r2, [r3, #0]
			CLR_BIT(gpioTemp->ODR, config->pinNumber);
 800025e:	68fb      	ldr	r3, [r7, #12]
 8000260:	68db      	ldr	r3, [r3, #12]
 8000262:	687a      	ldr	r2, [r7, #4]
 8000264:	7852      	ldrb	r2, [r2, #1]
 8000266:	4611      	mov	r1, r2
 8000268:	2201      	movs	r2, #1
 800026a:	408a      	lsls	r2, r1
 800026c:	43d2      	mvns	r2, r2
 800026e:	401a      	ands	r2, r3
 8000270:	68fb      	ldr	r3, [r7, #12]
 8000272:	60da      	str	r2, [r3, #12]
}
 8000274:	e1eb      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_INPUT_ANALOG) {
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	789b      	ldrb	r3, [r3, #2]
 800027a:	2b03      	cmp	r3, #3
 800027c:	d110      	bne.n	80002a0 <MCAL_GPIO_voidInit+0x130>
			gpioTemp->CRL &= ~(0b11 << (GPIO_CRL_SHIFT * config->pinNumber));
 800027e:	68fb      	ldr	r3, [r7, #12]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	687a      	ldr	r2, [r7, #4]
 8000284:	7852      	ldrb	r2, [r2, #1]
 8000286:	0092      	lsls	r2, r2, #2
 8000288:	2103      	movs	r1, #3
 800028a:	fa01 f202 	lsl.w	r2, r1, r2
 800028e:	43d2      	mvns	r2, r2
 8000290:	401a      	ands	r2, r3
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b00 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000296:	68fb      	ldr	r3, [r7, #12]
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	68fb      	ldr	r3, [r7, #12]
 800029c:	601a      	str	r2, [r3, #0]
}
 800029e:	e1d6      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_OUTPUT_PUSHPULL) {
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	789b      	ldrb	r3, [r3, #2]
 80002a4:	2b04      	cmp	r3, #4
 80002a6:	d11d      	bne.n	80002e4 <MCAL_GPIO_voidInit+0x174>
			gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 80002a8:	68fb      	ldr	r3, [r7, #12]
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	687a      	ldr	r2, [r7, #4]
 80002ae:	7852      	ldrb	r2, [r2, #1]
 80002b0:	0092      	lsls	r2, r2, #2
 80002b2:	210f      	movs	r1, #15
 80002b4:	fa01 f202 	lsl.w	r2, r1, r2
 80002b8:	43d2      	mvns	r2, r2
 80002ba:	401a      	ands	r2, r3
 80002bc:	68fb      	ldr	r3, [r7, #12]
 80002be:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	681b      	ldr	r3, [r3, #0]
 80002c4:	687a      	ldr	r2, [r7, #4]
 80002c6:	78d2      	ldrb	r2, [r2, #3]
 80002c8:	4611      	mov	r1, r2
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	7852      	ldrb	r2, [r2, #1]
 80002ce:	0092      	lsls	r2, r2, #2
 80002d0:	fa01 f202 	lsl.w	r2, r1, r2
 80002d4:	431a      	orrs	r2, r3
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b00 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 80002da:	68fb      	ldr	r3, [r7, #12]
 80002dc:	681a      	ldr	r2, [r3, #0]
 80002de:	68fb      	ldr	r3, [r7, #12]
 80002e0:	601a      	str	r2, [r3, #0]
}
 80002e2:	e1b4      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_OUTPUT_OPENDRAIN) {
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	789b      	ldrb	r3, [r3, #2]
 80002e8:	2b05      	cmp	r3, #5
 80002ea:	d125      	bne.n	8000338 <MCAL_GPIO_voidInit+0x1c8>
			gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 80002ec:	68fb      	ldr	r3, [r7, #12]
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	687a      	ldr	r2, [r7, #4]
 80002f2:	7852      	ldrb	r2, [r2, #1]
 80002f4:	0092      	lsls	r2, r2, #2
 80002f6:	210f      	movs	r1, #15
 80002f8:	fa01 f202 	lsl.w	r2, r1, r2
 80002fc:	43d2      	mvns	r2, r2
 80002fe:	401a      	ands	r2, r3
 8000300:	68fb      	ldr	r3, [r7, #12]
 8000302:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 8000304:	68fb      	ldr	r3, [r7, #12]
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	687a      	ldr	r2, [r7, #4]
 800030a:	78d2      	ldrb	r2, [r2, #3]
 800030c:	4611      	mov	r1, r2
 800030e:	687a      	ldr	r2, [r7, #4]
 8000310:	7852      	ldrb	r2, [r2, #1]
 8000312:	0092      	lsls	r2, r2, #2
 8000314:	fa01 f202 	lsl.w	r2, r1, r2
 8000318:	431a      	orrs	r2, r3
 800031a:	68fb      	ldr	r3, [r7, #12]
 800031c:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b01 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 800031e:	68fb      	ldr	r3, [r7, #12]
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	687a      	ldr	r2, [r7, #4]
 8000324:	7852      	ldrb	r2, [r2, #1]
 8000326:	0092      	lsls	r2, r2, #2
 8000328:	3202      	adds	r2, #2
 800032a:	2101      	movs	r1, #1
 800032c:	fa01 f202 	lsl.w	r2, r1, r2
 8000330:	431a      	orrs	r2, r3
 8000332:	68fb      	ldr	r3, [r7, #12]
 8000334:	601a      	str	r2, [r3, #0]
}
 8000336:	e18a      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_AF_PUSHPULL) {
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	789b      	ldrb	r3, [r3, #2]
 800033c:	2b06      	cmp	r3, #6
 800033e:	d125      	bne.n	800038c <MCAL_GPIO_voidInit+0x21c>
			gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000340:	68fb      	ldr	r3, [r7, #12]
 8000342:	681b      	ldr	r3, [r3, #0]
 8000344:	687a      	ldr	r2, [r7, #4]
 8000346:	7852      	ldrb	r2, [r2, #1]
 8000348:	0092      	lsls	r2, r2, #2
 800034a:	210f      	movs	r1, #15
 800034c:	fa01 f202 	lsl.w	r2, r1, r2
 8000350:	43d2      	mvns	r2, r2
 8000352:	401a      	ands	r2, r3
 8000354:	68fb      	ldr	r3, [r7, #12]
 8000356:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 8000358:	68fb      	ldr	r3, [r7, #12]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	687a      	ldr	r2, [r7, #4]
 800035e:	78d2      	ldrb	r2, [r2, #3]
 8000360:	4611      	mov	r1, r2
 8000362:	687a      	ldr	r2, [r7, #4]
 8000364:	7852      	ldrb	r2, [r2, #1]
 8000366:	0092      	lsls	r2, r2, #2
 8000368:	fa01 f202 	lsl.w	r2, r1, r2
 800036c:	431a      	orrs	r2, r3
 800036e:	68fb      	ldr	r3, [r7, #12]
 8000370:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b10 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 8000372:	68fb      	ldr	r3, [r7, #12]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	687a      	ldr	r2, [r7, #4]
 8000378:	7852      	ldrb	r2, [r2, #1]
 800037a:	0092      	lsls	r2, r2, #2
 800037c:	3202      	adds	r2, #2
 800037e:	2102      	movs	r1, #2
 8000380:	fa01 f202 	lsl.w	r2, r1, r2
 8000384:	431a      	orrs	r2, r3
 8000386:	68fb      	ldr	r3, [r7, #12]
 8000388:	601a      	str	r2, [r3, #0]
}
 800038a:	e160      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_AF_OPENDRAIN) {
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	789b      	ldrb	r3, [r3, #2]
 8000390:	2b07      	cmp	r3, #7
 8000392:	f040 815c 	bne.w	800064e <MCAL_GPIO_voidInit+0x4de>
			gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000396:	68fb      	ldr	r3, [r7, #12]
 8000398:	681b      	ldr	r3, [r3, #0]
 800039a:	687a      	ldr	r2, [r7, #4]
 800039c:	7852      	ldrb	r2, [r2, #1]
 800039e:	0092      	lsls	r2, r2, #2
 80003a0:	210f      	movs	r1, #15
 80003a2:	fa01 f202 	lsl.w	r2, r1, r2
 80003a6:	43d2      	mvns	r2, r2
 80003a8:	401a      	ands	r2, r3
 80003aa:	68fb      	ldr	r3, [r7, #12]
 80003ac:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 80003ae:	68fb      	ldr	r3, [r7, #12]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	687a      	ldr	r2, [r7, #4]
 80003b4:	78d2      	ldrb	r2, [r2, #3]
 80003b6:	4611      	mov	r1, r2
 80003b8:	687a      	ldr	r2, [r7, #4]
 80003ba:	7852      	ldrb	r2, [r2, #1]
 80003bc:	0092      	lsls	r2, r2, #2
 80003be:	fa01 f202 	lsl.w	r2, r1, r2
 80003c2:	431a      	orrs	r2, r3
 80003c4:	68fb      	ldr	r3, [r7, #12]
 80003c6:	601a      	str	r2, [r3, #0]
			gpioTemp->CRL |= (0b11 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 80003c8:	68fb      	ldr	r3, [r7, #12]
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	687a      	ldr	r2, [r7, #4]
 80003ce:	7852      	ldrb	r2, [r2, #1]
 80003d0:	0092      	lsls	r2, r2, #2
 80003d2:	3202      	adds	r2, #2
 80003d4:	2103      	movs	r1, #3
 80003d6:	fa01 f202 	lsl.w	r2, r1, r2
 80003da:	431a      	orrs	r2, r3
 80003dc:	68fb      	ldr	r3, [r7, #12]
 80003de:	601a      	str	r2, [r3, #0]
}
 80003e0:	e135      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
 80003e2:	bf00      	nop
 80003e4:	40010800 	.word	0x40010800
 80003e8:	40010c00 	.word	0x40010c00
 80003ec:	40011000 	.word	0x40011000
		if (config->mode == GPIO_MODE_INPUT_FLOATING) {
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	789b      	ldrb	r3, [r3, #2]
 80003f4:	2b00      	cmp	r3, #0
 80003f6:	d119      	bne.n	800042c <MCAL_GPIO_voidInit+0x2bc>
			gpioTemp->CRH &= ~(0b11 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80003f8:	68fb      	ldr	r3, [r7, #12]
 80003fa:	685b      	ldr	r3, [r3, #4]
 80003fc:	687a      	ldr	r2, [r7, #4]
 80003fe:	7852      	ldrb	r2, [r2, #1]
 8000400:	3a08      	subs	r2, #8
 8000402:	0092      	lsls	r2, r2, #2
 8000404:	2103      	movs	r1, #3
 8000406:	fa01 f202 	lsl.w	r2, r1, r2
 800040a:	43d2      	mvns	r2, r2
 800040c:	401a      	ands	r2, r3
 800040e:	68fb      	ldr	r3, [r7, #12]
 8000410:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b01 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000412:	68fb      	ldr	r3, [r7, #12]
 8000414:	685b      	ldr	r3, [r3, #4]
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	7852      	ldrb	r2, [r2, #1]
 800041a:	3a08      	subs	r2, #8
 800041c:	0092      	lsls	r2, r2, #2
 800041e:	2101      	movs	r1, #1
 8000420:	fa01 f202 	lsl.w	r2, r1, r2
 8000424:	431a      	orrs	r2, r3
 8000426:	68fb      	ldr	r3, [r7, #12]
 8000428:	605a      	str	r2, [r3, #4]
}
 800042a:	e110      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_INPUT_PULLUP) {
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	789b      	ldrb	r3, [r3, #2]
 8000430:	2b01      	cmp	r3, #1
 8000432:	d123      	bne.n	800047c <MCAL_GPIO_voidInit+0x30c>
			gpioTemp->CRH &= ~(0b11 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000434:	68fb      	ldr	r3, [r7, #12]
 8000436:	685b      	ldr	r3, [r3, #4]
 8000438:	687a      	ldr	r2, [r7, #4]
 800043a:	7852      	ldrb	r2, [r2, #1]
 800043c:	3a08      	subs	r2, #8
 800043e:	0092      	lsls	r2, r2, #2
 8000440:	2103      	movs	r1, #3
 8000442:	fa01 f202 	lsl.w	r2, r1, r2
 8000446:	43d2      	mvns	r2, r2
 8000448:	401a      	ands	r2, r3
 800044a:	68fb      	ldr	r3, [r7, #12]
 800044c:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b10 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800044e:	68fb      	ldr	r3, [r7, #12]
 8000450:	685b      	ldr	r3, [r3, #4]
 8000452:	687a      	ldr	r2, [r7, #4]
 8000454:	7852      	ldrb	r2, [r2, #1]
 8000456:	3a08      	subs	r2, #8
 8000458:	0092      	lsls	r2, r2, #2
 800045a:	2102      	movs	r1, #2
 800045c:	fa01 f202 	lsl.w	r2, r1, r2
 8000460:	431a      	orrs	r2, r3
 8000462:	68fb      	ldr	r3, [r7, #12]
 8000464:	605a      	str	r2, [r3, #4]
			SET_BIT(gpioTemp->ODR, config->pinNumber);
 8000466:	68fb      	ldr	r3, [r7, #12]
 8000468:	68db      	ldr	r3, [r3, #12]
 800046a:	687a      	ldr	r2, [r7, #4]
 800046c:	7852      	ldrb	r2, [r2, #1]
 800046e:	4611      	mov	r1, r2
 8000470:	2201      	movs	r2, #1
 8000472:	408a      	lsls	r2, r1
 8000474:	431a      	orrs	r2, r3
 8000476:	68fb      	ldr	r3, [r7, #12]
 8000478:	60da      	str	r2, [r3, #12]
}
 800047a:	e0e8      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_INPUT_PULLDOWN) {
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	789b      	ldrb	r3, [r3, #2]
 8000480:	2b02      	cmp	r3, #2
 8000482:	d124      	bne.n	80004ce <MCAL_GPIO_voidInit+0x35e>
			gpioTemp->CRH &= ~(0b11 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000484:	68fb      	ldr	r3, [r7, #12]
 8000486:	685b      	ldr	r3, [r3, #4]
 8000488:	687a      	ldr	r2, [r7, #4]
 800048a:	7852      	ldrb	r2, [r2, #1]
 800048c:	3a08      	subs	r2, #8
 800048e:	0092      	lsls	r2, r2, #2
 8000490:	2103      	movs	r1, #3
 8000492:	fa01 f202 	lsl.w	r2, r1, r2
 8000496:	43d2      	mvns	r2, r2
 8000498:	401a      	ands	r2, r3
 800049a:	68fb      	ldr	r3, [r7, #12]
 800049c:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b10 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800049e:	68fb      	ldr	r3, [r7, #12]
 80004a0:	685b      	ldr	r3, [r3, #4]
 80004a2:	687a      	ldr	r2, [r7, #4]
 80004a4:	7852      	ldrb	r2, [r2, #1]
 80004a6:	3a08      	subs	r2, #8
 80004a8:	0092      	lsls	r2, r2, #2
 80004aa:	2102      	movs	r1, #2
 80004ac:	fa01 f202 	lsl.w	r2, r1, r2
 80004b0:	431a      	orrs	r2, r3
 80004b2:	68fb      	ldr	r3, [r7, #12]
 80004b4:	605a      	str	r2, [r3, #4]
			CLR_BIT(gpioTemp->ODR, config->pinNumber);
 80004b6:	68fb      	ldr	r3, [r7, #12]
 80004b8:	68db      	ldr	r3, [r3, #12]
 80004ba:	687a      	ldr	r2, [r7, #4]
 80004bc:	7852      	ldrb	r2, [r2, #1]
 80004be:	4611      	mov	r1, r2
 80004c0:	2201      	movs	r2, #1
 80004c2:	408a      	lsls	r2, r1
 80004c4:	43d2      	mvns	r2, r2
 80004c6:	401a      	ands	r2, r3
 80004c8:	68fb      	ldr	r3, [r7, #12]
 80004ca:	60da      	str	r2, [r3, #12]
}
 80004cc:	e0bf      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_INPUT_ANALOG) {
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	789b      	ldrb	r3, [r3, #2]
 80004d2:	2b03      	cmp	r3, #3
 80004d4:	d111      	bne.n	80004fa <MCAL_GPIO_voidInit+0x38a>
			gpioTemp->CRH &= ~(0b11 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80004d6:	68fb      	ldr	r3, [r7, #12]
 80004d8:	685b      	ldr	r3, [r3, #4]
 80004da:	687a      	ldr	r2, [r7, #4]
 80004dc:	7852      	ldrb	r2, [r2, #1]
 80004de:	3a08      	subs	r2, #8
 80004e0:	0092      	lsls	r2, r2, #2
 80004e2:	2103      	movs	r1, #3
 80004e4:	fa01 f202 	lsl.w	r2, r1, r2
 80004e8:	43d2      	mvns	r2, r2
 80004ea:	401a      	ands	r2, r3
 80004ec:	68fb      	ldr	r3, [r7, #12]
 80004ee:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b00 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80004f0:	68fb      	ldr	r3, [r7, #12]
 80004f2:	685a      	ldr	r2, [r3, #4]
 80004f4:	68fb      	ldr	r3, [r7, #12]
 80004f6:	605a      	str	r2, [r3, #4]
}
 80004f8:	e0a9      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_OUTPUT_PUSHPULL) {
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	789b      	ldrb	r3, [r3, #2]
 80004fe:	2b04      	cmp	r3, #4
 8000500:	d11f      	bne.n	8000542 <MCAL_GPIO_voidInit+0x3d2>
			gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000502:	68fb      	ldr	r3, [r7, #12]
 8000504:	685b      	ldr	r3, [r3, #4]
 8000506:	687a      	ldr	r2, [r7, #4]
 8000508:	7852      	ldrb	r2, [r2, #1]
 800050a:	3a08      	subs	r2, #8
 800050c:	0092      	lsls	r2, r2, #2
 800050e:	210f      	movs	r1, #15
 8000510:	fa01 f202 	lsl.w	r2, r1, r2
 8000514:	43d2      	mvns	r2, r2
 8000516:	401a      	ands	r2, r3
 8000518:	68fb      	ldr	r3, [r7, #12]
 800051a:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800051c:	68fb      	ldr	r3, [r7, #12]
 800051e:	685b      	ldr	r3, [r3, #4]
 8000520:	687a      	ldr	r2, [r7, #4]
 8000522:	78d2      	ldrb	r2, [r2, #3]
 8000524:	4611      	mov	r1, r2
 8000526:	687a      	ldr	r2, [r7, #4]
 8000528:	7852      	ldrb	r2, [r2, #1]
 800052a:	3a08      	subs	r2, #8
 800052c:	0092      	lsls	r2, r2, #2
 800052e:	fa01 f202 	lsl.w	r2, r1, r2
 8000532:	431a      	orrs	r2, r3
 8000534:	68fb      	ldr	r3, [r7, #12]
 8000536:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b00 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 8000538:	68fb      	ldr	r3, [r7, #12]
 800053a:	685a      	ldr	r2, [r3, #4]
 800053c:	68fb      	ldr	r3, [r7, #12]
 800053e:	605a      	str	r2, [r3, #4]
}
 8000540:	e085      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_OUTPUT_OPENDRAIN) {
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	789b      	ldrb	r3, [r3, #2]
 8000546:	2b05      	cmp	r3, #5
 8000548:	d128      	bne.n	800059c <MCAL_GPIO_voidInit+0x42c>
			gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800054a:	68fb      	ldr	r3, [r7, #12]
 800054c:	685b      	ldr	r3, [r3, #4]
 800054e:	687a      	ldr	r2, [r7, #4]
 8000550:	7852      	ldrb	r2, [r2, #1]
 8000552:	3a08      	subs	r2, #8
 8000554:	0092      	lsls	r2, r2, #2
 8000556:	210f      	movs	r1, #15
 8000558:	fa01 f202 	lsl.w	r2, r1, r2
 800055c:	43d2      	mvns	r2, r2
 800055e:	401a      	ands	r2, r3
 8000560:	68fb      	ldr	r3, [r7, #12]
 8000562:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000564:	68fb      	ldr	r3, [r7, #12]
 8000566:	685b      	ldr	r3, [r3, #4]
 8000568:	687a      	ldr	r2, [r7, #4]
 800056a:	78d2      	ldrb	r2, [r2, #3]
 800056c:	4611      	mov	r1, r2
 800056e:	687a      	ldr	r2, [r7, #4]
 8000570:	7852      	ldrb	r2, [r2, #1]
 8000572:	3a08      	subs	r2, #8
 8000574:	0092      	lsls	r2, r2, #2
 8000576:	fa01 f202 	lsl.w	r2, r1, r2
 800057a:	431a      	orrs	r2, r3
 800057c:	68fb      	ldr	r3, [r7, #12]
 800057e:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b01 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 8000580:	68fb      	ldr	r3, [r7, #12]
 8000582:	685b      	ldr	r3, [r3, #4]
 8000584:	687a      	ldr	r2, [r7, #4]
 8000586:	7852      	ldrb	r2, [r2, #1]
 8000588:	3a08      	subs	r2, #8
 800058a:	0092      	lsls	r2, r2, #2
 800058c:	3202      	adds	r2, #2
 800058e:	2101      	movs	r1, #1
 8000590:	fa01 f202 	lsl.w	r2, r1, r2
 8000594:	431a      	orrs	r2, r3
 8000596:	68fb      	ldr	r3, [r7, #12]
 8000598:	605a      	str	r2, [r3, #4]
}
 800059a:	e058      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_AF_PUSHPULL) {
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	789b      	ldrb	r3, [r3, #2]
 80005a0:	2b06      	cmp	r3, #6
 80005a2:	d128      	bne.n	80005f6 <MCAL_GPIO_voidInit+0x486>
			gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80005a4:	68fb      	ldr	r3, [r7, #12]
 80005a6:	685b      	ldr	r3, [r3, #4]
 80005a8:	687a      	ldr	r2, [r7, #4]
 80005aa:	7852      	ldrb	r2, [r2, #1]
 80005ac:	3a08      	subs	r2, #8
 80005ae:	0092      	lsls	r2, r2, #2
 80005b0:	210f      	movs	r1, #15
 80005b2:	fa01 f202 	lsl.w	r2, r1, r2
 80005b6:	43d2      	mvns	r2, r2
 80005b8:	401a      	ands	r2, r3
 80005ba:	68fb      	ldr	r3, [r7, #12]
 80005bc:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80005be:	68fb      	ldr	r3, [r7, #12]
 80005c0:	685b      	ldr	r3, [r3, #4]
 80005c2:	687a      	ldr	r2, [r7, #4]
 80005c4:	78d2      	ldrb	r2, [r2, #3]
 80005c6:	4611      	mov	r1, r2
 80005c8:	687a      	ldr	r2, [r7, #4]
 80005ca:	7852      	ldrb	r2, [r2, #1]
 80005cc:	3a08      	subs	r2, #8
 80005ce:	0092      	lsls	r2, r2, #2
 80005d0:	fa01 f202 	lsl.w	r2, r1, r2
 80005d4:	431a      	orrs	r2, r3
 80005d6:	68fb      	ldr	r3, [r7, #12]
 80005d8:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b10 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 80005da:	68fb      	ldr	r3, [r7, #12]
 80005dc:	685b      	ldr	r3, [r3, #4]
 80005de:	687a      	ldr	r2, [r7, #4]
 80005e0:	7852      	ldrb	r2, [r2, #1]
 80005e2:	3a08      	subs	r2, #8
 80005e4:	0092      	lsls	r2, r2, #2
 80005e6:	3202      	adds	r2, #2
 80005e8:	2102      	movs	r1, #2
 80005ea:	fa01 f202 	lsl.w	r2, r1, r2
 80005ee:	431a      	orrs	r2, r3
 80005f0:	68fb      	ldr	r3, [r7, #12]
 80005f2:	605a      	str	r2, [r3, #4]
}
 80005f4:	e02b      	b.n	800064e <MCAL_GPIO_voidInit+0x4de>
		else if (config->mode == GPIO_MODE_AF_OPENDRAIN) {
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	789b      	ldrb	r3, [r3, #2]
 80005fa:	2b07      	cmp	r3, #7
 80005fc:	d127      	bne.n	800064e <MCAL_GPIO_voidInit+0x4de>
			gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80005fe:	68fb      	ldr	r3, [r7, #12]
 8000600:	685b      	ldr	r3, [r3, #4]
 8000602:	687a      	ldr	r2, [r7, #4]
 8000604:	7852      	ldrb	r2, [r2, #1]
 8000606:	3a08      	subs	r2, #8
 8000608:	0092      	lsls	r2, r2, #2
 800060a:	210f      	movs	r1, #15
 800060c:	fa01 f202 	lsl.w	r2, r1, r2
 8000610:	43d2      	mvns	r2, r2
 8000612:	401a      	ands	r2, r3
 8000614:	68fb      	ldr	r3, [r7, #12]
 8000616:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000618:	68fb      	ldr	r3, [r7, #12]
 800061a:	685b      	ldr	r3, [r3, #4]
 800061c:	687a      	ldr	r2, [r7, #4]
 800061e:	78d2      	ldrb	r2, [r2, #3]
 8000620:	4611      	mov	r1, r2
 8000622:	687a      	ldr	r2, [r7, #4]
 8000624:	7852      	ldrb	r2, [r2, #1]
 8000626:	3a08      	subs	r2, #8
 8000628:	0092      	lsls	r2, r2, #2
 800062a:	fa01 f202 	lsl.w	r2, r1, r2
 800062e:	431a      	orrs	r2, r3
 8000630:	68fb      	ldr	r3, [r7, #12]
 8000632:	605a      	str	r2, [r3, #4]
			gpioTemp->CRH |= (0b11 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 8000634:	68fb      	ldr	r3, [r7, #12]
 8000636:	685b      	ldr	r3, [r3, #4]
 8000638:	687a      	ldr	r2, [r7, #4]
 800063a:	7852      	ldrb	r2, [r2, #1]
 800063c:	3a08      	subs	r2, #8
 800063e:	0092      	lsls	r2, r2, #2
 8000640:	3202      	adds	r2, #2
 8000642:	2103      	movs	r1, #3
 8000644:	fa01 f202 	lsl.w	r2, r1, r2
 8000648:	431a      	orrs	r2, r3
 800064a:	68fb      	ldr	r3, [r7, #12]
 800064c:	605a      	str	r2, [r3, #4]
}
 800064e:	bf00      	nop
 8000650:	3714      	adds	r7, #20
 8000652:	46bd      	mov	sp, r7
 8000654:	bc80      	pop	{r7}
 8000656:	4770      	bx	lr

08000658 <MCAL_GPIO_voidWritePin>:

GPIO_Pin_State_t MCAL_GPIO_voidReadPin(GPIO_RegDef_t* GPIOx, u8 pinNumber) {
    return ((GPIOx->IDR >> pinNumber) & 0x01);
}

void MCAL_GPIO_voidWritePin(GPIO_RegDef_t* GPIOx, u8 pinNumber, u8 value) {
 8000658:	b480      	push	{r7}
 800065a:	b083      	sub	sp, #12
 800065c:	af00      	add	r7, sp, #0
 800065e:	6078      	str	r0, [r7, #4]
 8000660:	460b      	mov	r3, r1
 8000662:	70fb      	strb	r3, [r7, #3]
 8000664:	4613      	mov	r3, r2
 8000666:	70bb      	strb	r3, [r7, #2]
    if (value == GPIO_PIN_SET) {
 8000668:	78bb      	ldrb	r3, [r7, #2]
 800066a:	2b01      	cmp	r3, #1
 800066c:	d109      	bne.n	8000682 <MCAL_GPIO_voidWritePin+0x2a>
        GPIOx->BSRR |= (1 << pinNumber);
 800066e:	687b      	ldr	r3, [r7, #4]
 8000670:	691b      	ldr	r3, [r3, #16]
 8000672:	78fa      	ldrb	r2, [r7, #3]
 8000674:	2101      	movs	r1, #1
 8000676:	fa01 f202 	lsl.w	r2, r1, r2
 800067a:	431a      	orrs	r2, r3
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	611a      	str	r2, [r3, #16]
    }
    else {
        GPIOx->BRR |= (1 << pinNumber);
    }
}
 8000680:	e008      	b.n	8000694 <MCAL_GPIO_voidWritePin+0x3c>
        GPIOx->BRR |= (1 << pinNumber);
 8000682:	687b      	ldr	r3, [r7, #4]
 8000684:	695b      	ldr	r3, [r3, #20]
 8000686:	78fa      	ldrb	r2, [r7, #3]
 8000688:	2101      	movs	r1, #1
 800068a:	fa01 f202 	lsl.w	r2, r1, r2
 800068e:	431a      	orrs	r2, r3
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	615a      	str	r2, [r3, #20]
}
 8000694:	bf00      	nop
 8000696:	370c      	adds	r7, #12
 8000698:	46bd      	mov	sp, r7
 800069a:	bc80      	pop	{r7}
 800069c:	4770      	bx	lr
	...

080006a0 <MCAL_RCC_voidInit>:
  **************************
*/

#include "RCC_Interface.h"

void MCAL_RCC_voidInit(void) {
 80006a0:	b480      	push	{r7}
 80006a2:	af00      	add	r7, sp, #0
	switch (CLOCK_TYPE) {
		case RCC_HSI:
			SET_BIT(RCC->CR, RCC_CR_HSION_BIT);
 80006a4:	4b16      	ldr	r3, [pc, #88]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006a6:	681b      	ldr	r3, [r3, #0]
 80006a8:	4a15      	ldr	r2, [pc, #84]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006aa:	f043 0301 	orr.w	r3, r3, #1
 80006ae:	6013      	str	r3, [r2, #0]
			while (!GET_BIT(RCC->CR, RCC_CR_HSIRDY_BIT));
 80006b0:	bf00      	nop
 80006b2:	4b13      	ldr	r3, [pc, #76]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	085b      	lsrs	r3, r3, #1
 80006b8:	f003 0301 	and.w	r3, r3, #1
 80006bc:	2b00      	cmp	r3, #0
 80006be:	d0f8      	beq.n	80006b2 <MCAL_RCC_voidInit+0x12>
			CLR_BIT(RCC->CFGR, RCC_CFGR_SW1_BIT);
 80006c0:	4b0f      	ldr	r3, [pc, #60]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006c2:	685b      	ldr	r3, [r3, #4]
 80006c4:	4a0e      	ldr	r2, [pc, #56]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006c6:	f023 0302 	bic.w	r3, r3, #2
 80006ca:	6053      	str	r3, [r2, #4]
			CLR_BIT(RCC->CFGR, RCC_CFGR_SW0_BIT);
 80006cc:	4b0c      	ldr	r3, [pc, #48]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006ce:	685b      	ldr	r3, [r3, #4]
 80006d0:	4a0b      	ldr	r2, [pc, #44]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006d2:	f023 0301 	bic.w	r3, r3, #1
 80006d6:	6053      	str	r3, [r2, #4]
		break;
 80006d8:	bf00      	nop
		break;
		default:
		break;
	}

	RCC->CFGR |= (AHB_PRESCALE  << RCC_CFGR_HPRE_SHIFT);
 80006da:	4b09      	ldr	r3, [pc, #36]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006dc:	685b      	ldr	r3, [r3, #4]
 80006de:	4a08      	ldr	r2, [pc, #32]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006e0:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 80006e4:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= (APB1_PRESCALE << RCC_CFGR_PPRE1_SHIFT);
 80006e6:	4b06      	ldr	r3, [pc, #24]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006e8:	4a05      	ldr	r2, [pc, #20]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006ea:	685b      	ldr	r3, [r3, #4]
 80006ec:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= (APB2_PRESCALE << RCC_CFGR_PPRE2_SHIFT);
 80006ee:	4b04      	ldr	r3, [pc, #16]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006f0:	4a03      	ldr	r2, [pc, #12]	; (8000700 <MCAL_RCC_voidInit+0x60>)
 80006f2:	685b      	ldr	r3, [r3, #4]
 80006f4:	6053      	str	r3, [r2, #4]
}
 80006f6:	bf00      	nop
 80006f8:	46bd      	mov	sp, r7
 80006fa:	bc80      	pop	{r7}
 80006fc:	4770      	bx	lr
 80006fe:	bf00      	nop
 8000700:	40021000 	.word	0x40021000

08000704 <MCAL_RCC_voidEnablePeripheral>:

void MCAL_RCC_voidEnablePeripheral(const RCC_PeripheralId_t peripheralId) {
 8000704:	b480      	push	{r7}
 8000706:	b085      	sub	sp, #20
 8000708:	af00      	add	r7, sp, #0
 800070a:	6078      	str	r0, [r7, #4]
    u8 u8BusId = peripheralId >> 16;
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	0c1b      	lsrs	r3, r3, #16
 8000710:	73fb      	strb	r3, [r7, #15]

    switch (u8BusId) {
 8000712:	7bfb      	ldrb	r3, [r7, #15]
 8000714:	2b02      	cmp	r3, #2
 8000716:	d00f      	beq.n	8000738 <MCAL_RCC_voidEnablePeripheral+0x34>
 8000718:	2b03      	cmp	r3, #3
 800071a:	d018      	beq.n	800074e <MCAL_RCC_voidEnablePeripheral+0x4a>
 800071c:	2b01      	cmp	r3, #1
 800071e:	d000      	beq.n	8000722 <MCAL_RCC_voidEnablePeripheral+0x1e>
        break;
        case (RCC_APB2_ID):
            SET_BIT(RCC->APB2ENR, peripheralId & 0xFFFF);
        break;
        default:
        break;
 8000720:	e020      	b.n	8000764 <MCAL_RCC_voidEnablePeripheral+0x60>
            SET_BIT(RCC->AHBENR, peripheralId & 0xFFFF);
 8000722:	4b13      	ldr	r3, [pc, #76]	; (8000770 <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000724:	695a      	ldr	r2, [r3, #20]
 8000726:	2101      	movs	r1, #1
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	fa01 f303 	lsl.w	r3, r1, r3
 800072e:	b29b      	uxth	r3, r3
 8000730:	490f      	ldr	r1, [pc, #60]	; (8000770 <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000732:	4313      	orrs	r3, r2
 8000734:	614b      	str	r3, [r1, #20]
        break;
 8000736:	e015      	b.n	8000764 <MCAL_RCC_voidEnablePeripheral+0x60>
            SET_BIT(RCC->APB1ENR, peripheralId & 0xFFFF);
 8000738:	4b0d      	ldr	r3, [pc, #52]	; (8000770 <MCAL_RCC_voidEnablePeripheral+0x6c>)
 800073a:	69da      	ldr	r2, [r3, #28]
 800073c:	2101      	movs	r1, #1
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	fa01 f303 	lsl.w	r3, r1, r3
 8000744:	b29b      	uxth	r3, r3
 8000746:	490a      	ldr	r1, [pc, #40]	; (8000770 <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000748:	4313      	orrs	r3, r2
 800074a:	61cb      	str	r3, [r1, #28]
        break;
 800074c:	e00a      	b.n	8000764 <MCAL_RCC_voidEnablePeripheral+0x60>
            SET_BIT(RCC->APB2ENR, peripheralId & 0xFFFF);
 800074e:	4b08      	ldr	r3, [pc, #32]	; (8000770 <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000750:	699a      	ldr	r2, [r3, #24]
 8000752:	2101      	movs	r1, #1
 8000754:	687b      	ldr	r3, [r7, #4]
 8000756:	fa01 f303 	lsl.w	r3, r1, r3
 800075a:	b29b      	uxth	r3, r3
 800075c:	4904      	ldr	r1, [pc, #16]	; (8000770 <MCAL_RCC_voidEnablePeripheral+0x6c>)
 800075e:	4313      	orrs	r3, r2
 8000760:	618b      	str	r3, [r1, #24]
        break;
 8000762:	bf00      	nop
    }
}
 8000764:	bf00      	nop
 8000766:	3714      	adds	r7, #20
 8000768:	46bd      	mov	sp, r7
 800076a:	bc80      	pop	{r7}
 800076c:	4770      	bx	lr
 800076e:	bf00      	nop
 8000770:	40021000 	.word	0x40021000

08000774 <main>:
*/

#include "../MCAL/RCC/RCC_Interface.h"
#include "../MCAL/GPIO/GPIO_Interface.h"

int main(void) {
 8000774:	b580      	push	{r7, lr}
 8000776:	b082      	sub	sp, #8
 8000778:	af00      	add	r7, sp, #0
    MCAL_RCC_voidInit();
 800077a:	f7ff ff91 	bl	80006a0 <MCAL_RCC_voidInit>

    MCAL_RCC_voidEnablePeripheral(RCC_APB2_GPIOC);
 800077e:	4812      	ldr	r0, [pc, #72]	; (80007c8 <main+0x54>)
 8000780:	f7ff ffc0 	bl	8000704 <MCAL_RCC_voidEnablePeripheral>
    MCAL_RCC_voidEnablePeripheral(RCC_APB2_GPIOA);
 8000784:	4811      	ldr	r0, [pc, #68]	; (80007cc <main+0x58>)
 8000786:	f7ff ffbd 	bl	8000704 <MCAL_RCC_voidEnablePeripheral>

    GPIO_Config_t led;
    led.port = PORTC;
 800078a:	2302      	movs	r3, #2
 800078c:	713b      	strb	r3, [r7, #4]
    led.pinNumber = 15;
 800078e:	230f      	movs	r3, #15
 8000790:	717b      	strb	r3, [r7, #5]
    led.mode = GPIO_MODE_OUTPUT_PUSHPULL;
 8000792:	2304      	movs	r3, #4
 8000794:	71bb      	strb	r3, [r7, #6]
    led.speed = GPIO_SPEED_2MHZ;
 8000796:	2302      	movs	r3, #2
 8000798:	71fb      	strb	r3, [r7, #7]

    GPIO_Config_t btn;
    btn.port = PORTA;
 800079a:	2300      	movs	r3, #0
 800079c:	703b      	strb	r3, [r7, #0]
    btn.pinNumber = 7;
 800079e:	2307      	movs	r3, #7
 80007a0:	707b      	strb	r3, [r7, #1]
    btn.mode = GPIO_MODE_INPUT_PULLUP;
 80007a2:	2301      	movs	r3, #1
 80007a4:	70bb      	strb	r3, [r7, #2]
    btn.speed = GPIO_SPEED_2MHZ;
 80007a6:	2302      	movs	r3, #2
 80007a8:	70fb      	strb	r3, [r7, #3]

    MCAL_GPIO_voidInit(&led);
 80007aa:	1d3b      	adds	r3, r7, #4
 80007ac:	4618      	mov	r0, r3
 80007ae:	f7ff fcdf 	bl	8000170 <MCAL_GPIO_voidInit>
    MCAL_GPIO_voidInit(&btn);
 80007b2:	463b      	mov	r3, r7
 80007b4:	4618      	mov	r0, r3
 80007b6:	f7ff fcdb 	bl	8000170 <MCAL_GPIO_voidInit>

	MCAL_GPIO_voidWritePin(GPIOC, 15, GPIO_PIN_SET);
 80007ba:	2201      	movs	r2, #1
 80007bc:	210f      	movs	r1, #15
 80007be:	4804      	ldr	r0, [pc, #16]	; (80007d0 <main+0x5c>)
 80007c0:	f7ff ff4a 	bl	8000658 <MCAL_GPIO_voidWritePin>

    while (1) {
 80007c4:	e7fe      	b.n	80007c4 <main+0x50>
 80007c6:	bf00      	nop
 80007c8:	00030004 	.word	0x00030004
 80007cc:	00030002 	.word	0x00030002
 80007d0:	40011000 	.word	0x40011000

080007d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007d4:	480d      	ldr	r0, [pc, #52]	; (800080c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007d6:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007d8:	480d      	ldr	r0, [pc, #52]	; (8000810 <LoopForever+0x6>)
  ldr r1, =_edata
 80007da:	490e      	ldr	r1, [pc, #56]	; (8000814 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007dc:	4a0e      	ldr	r2, [pc, #56]	; (8000818 <LoopForever+0xe>)
  movs r3, #0
 80007de:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007e0:	e002      	b.n	80007e8 <LoopCopyDataInit>

080007e2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007e2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007e4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007e6:	3304      	adds	r3, #4

080007e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007e8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007ea:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007ec:	d3f9      	bcc.n	80007e2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007ee:	4a0b      	ldr	r2, [pc, #44]	; (800081c <LoopForever+0x12>)
  ldr r4, =_ebss
 80007f0:	4c0b      	ldr	r4, [pc, #44]	; (8000820 <LoopForever+0x16>)
  movs r3, #0
 80007f2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007f4:	e001      	b.n	80007fa <LoopFillZerobss>

080007f6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007f6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007f8:	3204      	adds	r2, #4

080007fa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007fa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007fc:	d3fb      	bcc.n	80007f6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80007fe:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 8000802:	f000 f811 	bl	8000828 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000806:	f7ff ffb5 	bl	8000774 <main>

0800080a <LoopForever>:

LoopForever:
    b LoopForever
 800080a:	e7fe      	b.n	800080a <LoopForever>
  ldr   r0, =_estack
 800080c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000810:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000814:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000818:	08000890 	.word	0x08000890
  ldr r2, =_sbss
 800081c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000820:	2000001c 	.word	0x2000001c

08000824 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000824:	e7fe      	b.n	8000824 <ADC1_2_IRQHandler>
	...

08000828 <__libc_init_array>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	2500      	movs	r5, #0
 800082c:	4e0c      	ldr	r6, [pc, #48]	; (8000860 <__libc_init_array+0x38>)
 800082e:	4c0d      	ldr	r4, [pc, #52]	; (8000864 <__libc_init_array+0x3c>)
 8000830:	1ba4      	subs	r4, r4, r6
 8000832:	10a4      	asrs	r4, r4, #2
 8000834:	42a5      	cmp	r5, r4
 8000836:	d109      	bne.n	800084c <__libc_init_array+0x24>
 8000838:	f000 f81a 	bl	8000870 <_init>
 800083c:	2500      	movs	r5, #0
 800083e:	4e0a      	ldr	r6, [pc, #40]	; (8000868 <__libc_init_array+0x40>)
 8000840:	4c0a      	ldr	r4, [pc, #40]	; (800086c <__libc_init_array+0x44>)
 8000842:	1ba4      	subs	r4, r4, r6
 8000844:	10a4      	asrs	r4, r4, #2
 8000846:	42a5      	cmp	r5, r4
 8000848:	d105      	bne.n	8000856 <__libc_init_array+0x2e>
 800084a:	bd70      	pop	{r4, r5, r6, pc}
 800084c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000850:	4798      	blx	r3
 8000852:	3501      	adds	r5, #1
 8000854:	e7ee      	b.n	8000834 <__libc_init_array+0xc>
 8000856:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800085a:	4798      	blx	r3
 800085c:	3501      	adds	r5, #1
 800085e:	e7f2      	b.n	8000846 <__libc_init_array+0x1e>
 8000860:	08000888 	.word	0x08000888
 8000864:	08000888 	.word	0x08000888
 8000868:	08000888 	.word	0x08000888
 800086c:	0800088c 	.word	0x0800088c

08000870 <_init>:
 8000870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000872:	bf00      	nop
 8000874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000876:	bc08      	pop	{r3}
 8000878:	469e      	mov	lr, r3
 800087a:	4770      	bx	lr

0800087c <_fini>:
 800087c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800087e:	bf00      	nop
 8000880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000882:	bc08      	pop	{r3}
 8000884:	469e      	mov	lr, r3
 8000886:	4770      	bx	lr

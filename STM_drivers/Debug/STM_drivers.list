
STM_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007f4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000924  0800092c  0001092c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000924  08000924  0001092c  2**0
                  CONTENTS
  4 .ARM          00000000  08000924  08000924  0001092c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000924  0800092c  0001092c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000924  08000924  00010924  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000928  08000928  00010928  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001092c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  0800092c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  0800092c  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001092c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d41  00000000  00000000  00010955  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000003d5  00000000  00000000  00011696  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000110  00000000  00000000  00011a70  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000c8  00000000  00000000  00011b80  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000025e  00000000  00000000  00011c48  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000005d7  00000000  00000000  00011ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003ca1  00000000  00000000  0001247d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001611e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000002c8  00000000  00000000  0001619c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800090c 	.word	0x0800090c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800090c 	.word	0x0800090c

08000170 <MCAL_GPIO_voidInit>:
 *      Author: Abdo
 */

#include "GPIO_Interface.h"

void MCAL_GPIO_voidInit(GPIO_Config_t * config) {
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
    GPIO_RegDef_t* gpioTemp;

    switch (config->port) {
 8000178:	687b      	ldr	r3, [r7, #4]
 800017a:	781b      	ldrb	r3, [r3, #0]
 800017c:	2b01      	cmp	r3, #1
 800017e:	d006      	beq.n	800018e <MCAL_GPIO_voidInit+0x1e>
 8000180:	2b02      	cmp	r3, #2
 8000182:	d007      	beq.n	8000194 <MCAL_GPIO_voidInit+0x24>
 8000184:	2b00      	cmp	r3, #0
 8000186:	d108      	bne.n	800019a <MCAL_GPIO_voidInit+0x2a>
        case (GPIO_PORTA):
            gpioTemp = GPIOA;
 8000188:	4b94      	ldr	r3, [pc, #592]	; (80003dc <MCAL_GPIO_voidInit+0x26c>)
 800018a:	60fb      	str	r3, [r7, #12]
            break;
 800018c:	e005      	b.n	800019a <MCAL_GPIO_voidInit+0x2a>
        case (GPIO_PORTB):
            gpioTemp = GPIOB;
 800018e:	4b94      	ldr	r3, [pc, #592]	; (80003e0 <MCAL_GPIO_voidInit+0x270>)
 8000190:	60fb      	str	r3, [r7, #12]
            break;
 8000192:	e002      	b.n	800019a <MCAL_GPIO_voidInit+0x2a>
        case (GPIO_PORTC):
            gpioTemp = GPIOC;
 8000194:	4b93      	ldr	r3, [pc, #588]	; (80003e4 <MCAL_GPIO_voidInit+0x274>)
 8000196:	60fb      	str	r3, [r7, #12]
            break;
 8000198:	bf00      	nop
    }

    if (config->pinNumber < 8) {
 800019a:	687b      	ldr	r3, [r7, #4]
 800019c:	785b      	ldrb	r3, [r3, #1]
 800019e:	2b07      	cmp	r3, #7
 80001a0:	f200 8122 	bhi.w	80003e8 <MCAL_GPIO_voidInit+0x278>
        if (config->mode == GPIO_MODE_INPUT_FLOATING) {
 80001a4:	687b      	ldr	r3, [r7, #4]
 80001a6:	789b      	ldrb	r3, [r3, #2]
 80001a8:	2b00      	cmp	r3, #0
 80001aa:	d117      	bne.n	80001dc <MCAL_GPIO_voidInit+0x6c>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001ac:	68fb      	ldr	r3, [r7, #12]
 80001ae:	681b      	ldr	r3, [r3, #0]
 80001b0:	687a      	ldr	r2, [r7, #4]
 80001b2:	7852      	ldrb	r2, [r2, #1]
 80001b4:	0092      	lsls	r2, r2, #2
 80001b6:	210f      	movs	r1, #15
 80001b8:	fa01 f202 	lsl.w	r2, r1, r2
 80001bc:	43d2      	mvns	r2, r2
 80001be:	401a      	ands	r2, r3
 80001c0:	68fb      	ldr	r3, [r7, #12]
 80001c2:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b0100 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001c4:	68fb      	ldr	r3, [r7, #12]
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	687a      	ldr	r2, [r7, #4]
 80001ca:	7852      	ldrb	r2, [r2, #1]
 80001cc:	0092      	lsls	r2, r2, #2
 80001ce:	2104      	movs	r1, #4
 80001d0:	fa01 f202 	lsl.w	r2, r1, r2
 80001d4:	431a      	orrs	r2, r3
 80001d6:	68fb      	ldr	r3, [r7, #12]
 80001d8:	601a      	str	r2, [r3, #0]
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
            gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
            gpioTemp->CRH |= (0b11 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
        }
    }
}
 80001da:	e230      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_INPUT_PULLUP) {
 80001dc:	687b      	ldr	r3, [r7, #4]
 80001de:	789b      	ldrb	r3, [r3, #2]
 80001e0:	2b01      	cmp	r3, #1
 80001e2:	d121      	bne.n	8000228 <MCAL_GPIO_voidInit+0xb8>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001e4:	68fb      	ldr	r3, [r7, #12]
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	687a      	ldr	r2, [r7, #4]
 80001ea:	7852      	ldrb	r2, [r2, #1]
 80001ec:	0092      	lsls	r2, r2, #2
 80001ee:	210f      	movs	r1, #15
 80001f0:	fa01 f202 	lsl.w	r2, r1, r2
 80001f4:	43d2      	mvns	r2, r2
 80001f6:	401a      	ands	r2, r3
 80001f8:	68fb      	ldr	r3, [r7, #12]
 80001fa:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b1000 << (GPIO_CRL_SHIFT * config->pinNumber));
 80001fc:	68fb      	ldr	r3, [r7, #12]
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	687a      	ldr	r2, [r7, #4]
 8000202:	7852      	ldrb	r2, [r2, #1]
 8000204:	0092      	lsls	r2, r2, #2
 8000206:	2108      	movs	r1, #8
 8000208:	fa01 f202 	lsl.w	r2, r1, r2
 800020c:	431a      	orrs	r2, r3
 800020e:	68fb      	ldr	r3, [r7, #12]
 8000210:	601a      	str	r2, [r3, #0]
            SET_BIT(gpioTemp->ODR, config->pinNumber);
 8000212:	68fb      	ldr	r3, [r7, #12]
 8000214:	68db      	ldr	r3, [r3, #12]
 8000216:	687a      	ldr	r2, [r7, #4]
 8000218:	7852      	ldrb	r2, [r2, #1]
 800021a:	4611      	mov	r1, r2
 800021c:	2201      	movs	r2, #1
 800021e:	408a      	lsls	r2, r1
 8000220:	431a      	orrs	r2, r3
 8000222:	68fb      	ldr	r3, [r7, #12]
 8000224:	60da      	str	r2, [r3, #12]
}
 8000226:	e20a      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_INPUT_PULLDOWN) {
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	789b      	ldrb	r3, [r3, #2]
 800022c:	2b02      	cmp	r3, #2
 800022e:	d122      	bne.n	8000276 <MCAL_GPIO_voidInit+0x106>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000230:	68fb      	ldr	r3, [r7, #12]
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	687a      	ldr	r2, [r7, #4]
 8000236:	7852      	ldrb	r2, [r2, #1]
 8000238:	0092      	lsls	r2, r2, #2
 800023a:	210f      	movs	r1, #15
 800023c:	fa01 f202 	lsl.w	r2, r1, r2
 8000240:	43d2      	mvns	r2, r2
 8000242:	401a      	ands	r2, r3
 8000244:	68fb      	ldr	r3, [r7, #12]
 8000246:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b1000 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000248:	68fb      	ldr	r3, [r7, #12]
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	687a      	ldr	r2, [r7, #4]
 800024e:	7852      	ldrb	r2, [r2, #1]
 8000250:	0092      	lsls	r2, r2, #2
 8000252:	2108      	movs	r1, #8
 8000254:	fa01 f202 	lsl.w	r2, r1, r2
 8000258:	431a      	orrs	r2, r3
 800025a:	68fb      	ldr	r3, [r7, #12]
 800025c:	601a      	str	r2, [r3, #0]
            CLR_BIT(gpioTemp->ODR, config->pinNumber);
 800025e:	68fb      	ldr	r3, [r7, #12]
 8000260:	68db      	ldr	r3, [r3, #12]
 8000262:	687a      	ldr	r2, [r7, #4]
 8000264:	7852      	ldrb	r2, [r2, #1]
 8000266:	4611      	mov	r1, r2
 8000268:	2201      	movs	r2, #1
 800026a:	408a      	lsls	r2, r1
 800026c:	43d2      	mvns	r2, r2
 800026e:	401a      	ands	r2, r3
 8000270:	68fb      	ldr	r3, [r7, #12]
 8000272:	60da      	str	r2, [r3, #12]
}
 8000274:	e1e3      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_INPUT_ANALOG) {
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	789b      	ldrb	r3, [r3, #2]
 800027a:	2b03      	cmp	r3, #3
 800027c:	d10c      	bne.n	8000298 <MCAL_GPIO_voidInit+0x128>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 800027e:	68fb      	ldr	r3, [r7, #12]
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	687a      	ldr	r2, [r7, #4]
 8000284:	7852      	ldrb	r2, [r2, #1]
 8000286:	0092      	lsls	r2, r2, #2
 8000288:	210f      	movs	r1, #15
 800028a:	fa01 f202 	lsl.w	r2, r1, r2
 800028e:	43d2      	mvns	r2, r2
 8000290:	401a      	ands	r2, r3
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	601a      	str	r2, [r3, #0]
}
 8000296:	e1d2      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_OUTPUT_PUSHPULL) {
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	789b      	ldrb	r3, [r3, #2]
 800029c:	2b04      	cmp	r3, #4
 800029e:	d11d      	bne.n	80002dc <MCAL_GPIO_voidInit+0x16c>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 80002a0:	68fb      	ldr	r3, [r7, #12]
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	687a      	ldr	r2, [r7, #4]
 80002a6:	7852      	ldrb	r2, [r2, #1]
 80002a8:	0092      	lsls	r2, r2, #2
 80002aa:	210f      	movs	r1, #15
 80002ac:	fa01 f202 	lsl.w	r2, r1, r2
 80002b0:	43d2      	mvns	r2, r2
 80002b2:	401a      	ands	r2, r3
 80002b4:	68fb      	ldr	r3, [r7, #12]
 80002b6:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 80002b8:	68fb      	ldr	r3, [r7, #12]
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	687a      	ldr	r2, [r7, #4]
 80002be:	78d2      	ldrb	r2, [r2, #3]
 80002c0:	4611      	mov	r1, r2
 80002c2:	687a      	ldr	r2, [r7, #4]
 80002c4:	7852      	ldrb	r2, [r2, #1]
 80002c6:	0092      	lsls	r2, r2, #2
 80002c8:	fa01 f202 	lsl.w	r2, r1, r2
 80002cc:	431a      	orrs	r2, r3
 80002ce:	68fb      	ldr	r3, [r7, #12]
 80002d0:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b00 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 80002d2:	68fb      	ldr	r3, [r7, #12]
 80002d4:	681a      	ldr	r2, [r3, #0]
 80002d6:	68fb      	ldr	r3, [r7, #12]
 80002d8:	601a      	str	r2, [r3, #0]
}
 80002da:	e1b0      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_OUTPUT_OPENDRAIN) {
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	789b      	ldrb	r3, [r3, #2]
 80002e0:	2b05      	cmp	r3, #5
 80002e2:	d125      	bne.n	8000330 <MCAL_GPIO_voidInit+0x1c0>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 80002e4:	68fb      	ldr	r3, [r7, #12]
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	7852      	ldrb	r2, [r2, #1]
 80002ec:	0092      	lsls	r2, r2, #2
 80002ee:	210f      	movs	r1, #15
 80002f0:	fa01 f202 	lsl.w	r2, r1, r2
 80002f4:	43d2      	mvns	r2, r2
 80002f6:	401a      	ands	r2, r3
 80002f8:	68fb      	ldr	r3, [r7, #12]
 80002fa:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 80002fc:	68fb      	ldr	r3, [r7, #12]
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	687a      	ldr	r2, [r7, #4]
 8000302:	78d2      	ldrb	r2, [r2, #3]
 8000304:	4611      	mov	r1, r2
 8000306:	687a      	ldr	r2, [r7, #4]
 8000308:	7852      	ldrb	r2, [r2, #1]
 800030a:	0092      	lsls	r2, r2, #2
 800030c:	fa01 f202 	lsl.w	r2, r1, r2
 8000310:	431a      	orrs	r2, r3
 8000312:	68fb      	ldr	r3, [r7, #12]
 8000314:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b01 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 8000316:	68fb      	ldr	r3, [r7, #12]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	687a      	ldr	r2, [r7, #4]
 800031c:	7852      	ldrb	r2, [r2, #1]
 800031e:	0092      	lsls	r2, r2, #2
 8000320:	3202      	adds	r2, #2
 8000322:	2101      	movs	r1, #1
 8000324:	fa01 f202 	lsl.w	r2, r1, r2
 8000328:	431a      	orrs	r2, r3
 800032a:	68fb      	ldr	r3, [r7, #12]
 800032c:	601a      	str	r2, [r3, #0]
}
 800032e:	e186      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_AF_PUSHPULL) {
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	789b      	ldrb	r3, [r3, #2]
 8000334:	2b06      	cmp	r3, #6
 8000336:	d125      	bne.n	8000384 <MCAL_GPIO_voidInit+0x214>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 8000338:	68fb      	ldr	r3, [r7, #12]
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	687a      	ldr	r2, [r7, #4]
 800033e:	7852      	ldrb	r2, [r2, #1]
 8000340:	0092      	lsls	r2, r2, #2
 8000342:	210f      	movs	r1, #15
 8000344:	fa01 f202 	lsl.w	r2, r1, r2
 8000348:	43d2      	mvns	r2, r2
 800034a:	401a      	ands	r2, r3
 800034c:	68fb      	ldr	r3, [r7, #12]
 800034e:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 8000350:	68fb      	ldr	r3, [r7, #12]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	687a      	ldr	r2, [r7, #4]
 8000356:	78d2      	ldrb	r2, [r2, #3]
 8000358:	4611      	mov	r1, r2
 800035a:	687a      	ldr	r2, [r7, #4]
 800035c:	7852      	ldrb	r2, [r2, #1]
 800035e:	0092      	lsls	r2, r2, #2
 8000360:	fa01 f202 	lsl.w	r2, r1, r2
 8000364:	431a      	orrs	r2, r3
 8000366:	68fb      	ldr	r3, [r7, #12]
 8000368:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b10 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 800036a:	68fb      	ldr	r3, [r7, #12]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	687a      	ldr	r2, [r7, #4]
 8000370:	7852      	ldrb	r2, [r2, #1]
 8000372:	0092      	lsls	r2, r2, #2
 8000374:	3202      	adds	r2, #2
 8000376:	2102      	movs	r1, #2
 8000378:	fa01 f202 	lsl.w	r2, r1, r2
 800037c:	431a      	orrs	r2, r3
 800037e:	68fb      	ldr	r3, [r7, #12]
 8000380:	601a      	str	r2, [r3, #0]
}
 8000382:	e15c      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_AF_OPENDRAIN) {
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	789b      	ldrb	r3, [r3, #2]
 8000388:	2b07      	cmp	r3, #7
 800038a:	f040 8158 	bne.w	800063e <MCAL_GPIO_voidInit+0x4ce>
            gpioTemp->CRL &= ~(0b1111 << (GPIO_CRL_SHIFT * config->pinNumber));
 800038e:	68fb      	ldr	r3, [r7, #12]
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	687a      	ldr	r2, [r7, #4]
 8000394:	7852      	ldrb	r2, [r2, #1]
 8000396:	0092      	lsls	r2, r2, #2
 8000398:	210f      	movs	r1, #15
 800039a:	fa01 f202 	lsl.w	r2, r1, r2
 800039e:	43d2      	mvns	r2, r2
 80003a0:	401a      	ands	r2, r3
 80003a2:	68fb      	ldr	r3, [r7, #12]
 80003a4:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (config->speed << (GPIO_CRL_SHIFT * config->pinNumber));
 80003a6:	68fb      	ldr	r3, [r7, #12]
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	687a      	ldr	r2, [r7, #4]
 80003ac:	78d2      	ldrb	r2, [r2, #3]
 80003ae:	4611      	mov	r1, r2
 80003b0:	687a      	ldr	r2, [r7, #4]
 80003b2:	7852      	ldrb	r2, [r2, #1]
 80003b4:	0092      	lsls	r2, r2, #2
 80003b6:	fa01 f202 	lsl.w	r2, r1, r2
 80003ba:	431a      	orrs	r2, r3
 80003bc:	68fb      	ldr	r3, [r7, #12]
 80003be:	601a      	str	r2, [r3, #0]
            gpioTemp->CRL |= (0b11 << ((GPIO_CRL_SHIFT * config->pinNumber) + 2));
 80003c0:	68fb      	ldr	r3, [r7, #12]
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	687a      	ldr	r2, [r7, #4]
 80003c6:	7852      	ldrb	r2, [r2, #1]
 80003c8:	0092      	lsls	r2, r2, #2
 80003ca:	3202      	adds	r2, #2
 80003cc:	2103      	movs	r1, #3
 80003ce:	fa01 f202 	lsl.w	r2, r1, r2
 80003d2:	431a      	orrs	r2, r3
 80003d4:	68fb      	ldr	r3, [r7, #12]
 80003d6:	601a      	str	r2, [r3, #0]
}
 80003d8:	e131      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
 80003da:	bf00      	nop
 80003dc:	40010800 	.word	0x40010800
 80003e0:	40010c00 	.word	0x40010c00
 80003e4:	40011000 	.word	0x40011000
        if (config->mode == GPIO_MODE_INPUT_FLOATING) {
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	789b      	ldrb	r3, [r3, #2]
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d119      	bne.n	8000424 <MCAL_GPIO_voidInit+0x2b4>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80003f0:	68fb      	ldr	r3, [r7, #12]
 80003f2:	685b      	ldr	r3, [r3, #4]
 80003f4:	687a      	ldr	r2, [r7, #4]
 80003f6:	7852      	ldrb	r2, [r2, #1]
 80003f8:	3a08      	subs	r2, #8
 80003fa:	0092      	lsls	r2, r2, #2
 80003fc:	210f      	movs	r1, #15
 80003fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000402:	43d2      	mvns	r2, r2
 8000404:	401a      	ands	r2, r3
 8000406:	68fb      	ldr	r3, [r7, #12]
 8000408:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b0100 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800040a:	68fb      	ldr	r3, [r7, #12]
 800040c:	685b      	ldr	r3, [r3, #4]
 800040e:	687a      	ldr	r2, [r7, #4]
 8000410:	7852      	ldrb	r2, [r2, #1]
 8000412:	3a08      	subs	r2, #8
 8000414:	0092      	lsls	r2, r2, #2
 8000416:	2104      	movs	r1, #4
 8000418:	fa01 f202 	lsl.w	r2, r1, r2
 800041c:	431a      	orrs	r2, r3
 800041e:	68fb      	ldr	r3, [r7, #12]
 8000420:	605a      	str	r2, [r3, #4]
}
 8000422:	e10c      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_INPUT_PULLUP) {
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	789b      	ldrb	r3, [r3, #2]
 8000428:	2b01      	cmp	r3, #1
 800042a:	d123      	bne.n	8000474 <MCAL_GPIO_voidInit+0x304>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800042c:	68fb      	ldr	r3, [r7, #12]
 800042e:	685b      	ldr	r3, [r3, #4]
 8000430:	687a      	ldr	r2, [r7, #4]
 8000432:	7852      	ldrb	r2, [r2, #1]
 8000434:	3a08      	subs	r2, #8
 8000436:	0092      	lsls	r2, r2, #2
 8000438:	210f      	movs	r1, #15
 800043a:	fa01 f202 	lsl.w	r2, r1, r2
 800043e:	43d2      	mvns	r2, r2
 8000440:	401a      	ands	r2, r3
 8000442:	68fb      	ldr	r3, [r7, #12]
 8000444:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b1000 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000446:	68fb      	ldr	r3, [r7, #12]
 8000448:	685b      	ldr	r3, [r3, #4]
 800044a:	687a      	ldr	r2, [r7, #4]
 800044c:	7852      	ldrb	r2, [r2, #1]
 800044e:	3a08      	subs	r2, #8
 8000450:	0092      	lsls	r2, r2, #2
 8000452:	2108      	movs	r1, #8
 8000454:	fa01 f202 	lsl.w	r2, r1, r2
 8000458:	431a      	orrs	r2, r3
 800045a:	68fb      	ldr	r3, [r7, #12]
 800045c:	605a      	str	r2, [r3, #4]
            SET_BIT(gpioTemp->ODR, config->pinNumber);
 800045e:	68fb      	ldr	r3, [r7, #12]
 8000460:	68db      	ldr	r3, [r3, #12]
 8000462:	687a      	ldr	r2, [r7, #4]
 8000464:	7852      	ldrb	r2, [r2, #1]
 8000466:	4611      	mov	r1, r2
 8000468:	2201      	movs	r2, #1
 800046a:	408a      	lsls	r2, r1
 800046c:	431a      	orrs	r2, r3
 800046e:	68fb      	ldr	r3, [r7, #12]
 8000470:	60da      	str	r2, [r3, #12]
}
 8000472:	e0e4      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_INPUT_PULLDOWN) {
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	789b      	ldrb	r3, [r3, #2]
 8000478:	2b02      	cmp	r3, #2
 800047a:	d124      	bne.n	80004c6 <MCAL_GPIO_voidInit+0x356>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800047c:	68fb      	ldr	r3, [r7, #12]
 800047e:	685b      	ldr	r3, [r3, #4]
 8000480:	687a      	ldr	r2, [r7, #4]
 8000482:	7852      	ldrb	r2, [r2, #1]
 8000484:	3a08      	subs	r2, #8
 8000486:	0092      	lsls	r2, r2, #2
 8000488:	210f      	movs	r1, #15
 800048a:	fa01 f202 	lsl.w	r2, r1, r2
 800048e:	43d2      	mvns	r2, r2
 8000490:	401a      	ands	r2, r3
 8000492:	68fb      	ldr	r3, [r7, #12]
 8000494:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b1000 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000496:	68fb      	ldr	r3, [r7, #12]
 8000498:	685b      	ldr	r3, [r3, #4]
 800049a:	687a      	ldr	r2, [r7, #4]
 800049c:	7852      	ldrb	r2, [r2, #1]
 800049e:	3a08      	subs	r2, #8
 80004a0:	0092      	lsls	r2, r2, #2
 80004a2:	2108      	movs	r1, #8
 80004a4:	fa01 f202 	lsl.w	r2, r1, r2
 80004a8:	431a      	orrs	r2, r3
 80004aa:	68fb      	ldr	r3, [r7, #12]
 80004ac:	605a      	str	r2, [r3, #4]
            CLR_BIT(gpioTemp->ODR, config->pinNumber);
 80004ae:	68fb      	ldr	r3, [r7, #12]
 80004b0:	68db      	ldr	r3, [r3, #12]
 80004b2:	687a      	ldr	r2, [r7, #4]
 80004b4:	7852      	ldrb	r2, [r2, #1]
 80004b6:	4611      	mov	r1, r2
 80004b8:	2201      	movs	r2, #1
 80004ba:	408a      	lsls	r2, r1
 80004bc:	43d2      	mvns	r2, r2
 80004be:	401a      	ands	r2, r3
 80004c0:	68fb      	ldr	r3, [r7, #12]
 80004c2:	60da      	str	r2, [r3, #12]
}
 80004c4:	e0bb      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_INPUT_ANALOG) {
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	789b      	ldrb	r3, [r3, #2]
 80004ca:	2b03      	cmp	r3, #3
 80004cc:	d10d      	bne.n	80004ea <MCAL_GPIO_voidInit+0x37a>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80004ce:	68fb      	ldr	r3, [r7, #12]
 80004d0:	685b      	ldr	r3, [r3, #4]
 80004d2:	687a      	ldr	r2, [r7, #4]
 80004d4:	7852      	ldrb	r2, [r2, #1]
 80004d6:	3a08      	subs	r2, #8
 80004d8:	0092      	lsls	r2, r2, #2
 80004da:	210f      	movs	r1, #15
 80004dc:	fa01 f202 	lsl.w	r2, r1, r2
 80004e0:	43d2      	mvns	r2, r2
 80004e2:	401a      	ands	r2, r3
 80004e4:	68fb      	ldr	r3, [r7, #12]
 80004e6:	605a      	str	r2, [r3, #4]
}
 80004e8:	e0a9      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_OUTPUT_PUSHPULL) {
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	789b      	ldrb	r3, [r3, #2]
 80004ee:	2b04      	cmp	r3, #4
 80004f0:	d11f      	bne.n	8000532 <MCAL_GPIO_voidInit+0x3c2>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80004f2:	68fb      	ldr	r3, [r7, #12]
 80004f4:	685b      	ldr	r3, [r3, #4]
 80004f6:	687a      	ldr	r2, [r7, #4]
 80004f8:	7852      	ldrb	r2, [r2, #1]
 80004fa:	3a08      	subs	r2, #8
 80004fc:	0092      	lsls	r2, r2, #2
 80004fe:	210f      	movs	r1, #15
 8000500:	fa01 f202 	lsl.w	r2, r1, r2
 8000504:	43d2      	mvns	r2, r2
 8000506:	401a      	ands	r2, r3
 8000508:	68fb      	ldr	r3, [r7, #12]
 800050a:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800050c:	68fb      	ldr	r3, [r7, #12]
 800050e:	685b      	ldr	r3, [r3, #4]
 8000510:	687a      	ldr	r2, [r7, #4]
 8000512:	78d2      	ldrb	r2, [r2, #3]
 8000514:	4611      	mov	r1, r2
 8000516:	687a      	ldr	r2, [r7, #4]
 8000518:	7852      	ldrb	r2, [r2, #1]
 800051a:	3a08      	subs	r2, #8
 800051c:	0092      	lsls	r2, r2, #2
 800051e:	fa01 f202 	lsl.w	r2, r1, r2
 8000522:	431a      	orrs	r2, r3
 8000524:	68fb      	ldr	r3, [r7, #12]
 8000526:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b00 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 8000528:	68fb      	ldr	r3, [r7, #12]
 800052a:	685a      	ldr	r2, [r3, #4]
 800052c:	68fb      	ldr	r3, [r7, #12]
 800052e:	605a      	str	r2, [r3, #4]
}
 8000530:	e085      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_OUTPUT_OPENDRAIN) {
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	789b      	ldrb	r3, [r3, #2]
 8000536:	2b05      	cmp	r3, #5
 8000538:	d128      	bne.n	800058c <MCAL_GPIO_voidInit+0x41c>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 800053a:	68fb      	ldr	r3, [r7, #12]
 800053c:	685b      	ldr	r3, [r3, #4]
 800053e:	687a      	ldr	r2, [r7, #4]
 8000540:	7852      	ldrb	r2, [r2, #1]
 8000542:	3a08      	subs	r2, #8
 8000544:	0092      	lsls	r2, r2, #2
 8000546:	210f      	movs	r1, #15
 8000548:	fa01 f202 	lsl.w	r2, r1, r2
 800054c:	43d2      	mvns	r2, r2
 800054e:	401a      	ands	r2, r3
 8000550:	68fb      	ldr	r3, [r7, #12]
 8000552:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000554:	68fb      	ldr	r3, [r7, #12]
 8000556:	685b      	ldr	r3, [r3, #4]
 8000558:	687a      	ldr	r2, [r7, #4]
 800055a:	78d2      	ldrb	r2, [r2, #3]
 800055c:	4611      	mov	r1, r2
 800055e:	687a      	ldr	r2, [r7, #4]
 8000560:	7852      	ldrb	r2, [r2, #1]
 8000562:	3a08      	subs	r2, #8
 8000564:	0092      	lsls	r2, r2, #2
 8000566:	fa01 f202 	lsl.w	r2, r1, r2
 800056a:	431a      	orrs	r2, r3
 800056c:	68fb      	ldr	r3, [r7, #12]
 800056e:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b01 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 8000570:	68fb      	ldr	r3, [r7, #12]
 8000572:	685b      	ldr	r3, [r3, #4]
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	7852      	ldrb	r2, [r2, #1]
 8000578:	3a08      	subs	r2, #8
 800057a:	0092      	lsls	r2, r2, #2
 800057c:	3202      	adds	r2, #2
 800057e:	2101      	movs	r1, #1
 8000580:	fa01 f202 	lsl.w	r2, r1, r2
 8000584:	431a      	orrs	r2, r3
 8000586:	68fb      	ldr	r3, [r7, #12]
 8000588:	605a      	str	r2, [r3, #4]
}
 800058a:	e058      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_AF_PUSHPULL) {
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	789b      	ldrb	r3, [r3, #2]
 8000590:	2b06      	cmp	r3, #6
 8000592:	d128      	bne.n	80005e6 <MCAL_GPIO_voidInit+0x476>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000594:	68fb      	ldr	r3, [r7, #12]
 8000596:	685b      	ldr	r3, [r3, #4]
 8000598:	687a      	ldr	r2, [r7, #4]
 800059a:	7852      	ldrb	r2, [r2, #1]
 800059c:	3a08      	subs	r2, #8
 800059e:	0092      	lsls	r2, r2, #2
 80005a0:	210f      	movs	r1, #15
 80005a2:	fa01 f202 	lsl.w	r2, r1, r2
 80005a6:	43d2      	mvns	r2, r2
 80005a8:	401a      	ands	r2, r3
 80005aa:	68fb      	ldr	r3, [r7, #12]
 80005ac:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80005ae:	68fb      	ldr	r3, [r7, #12]
 80005b0:	685b      	ldr	r3, [r3, #4]
 80005b2:	687a      	ldr	r2, [r7, #4]
 80005b4:	78d2      	ldrb	r2, [r2, #3]
 80005b6:	4611      	mov	r1, r2
 80005b8:	687a      	ldr	r2, [r7, #4]
 80005ba:	7852      	ldrb	r2, [r2, #1]
 80005bc:	3a08      	subs	r2, #8
 80005be:	0092      	lsls	r2, r2, #2
 80005c0:	fa01 f202 	lsl.w	r2, r1, r2
 80005c4:	431a      	orrs	r2, r3
 80005c6:	68fb      	ldr	r3, [r7, #12]
 80005c8:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b10 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 80005ca:	68fb      	ldr	r3, [r7, #12]
 80005cc:	685b      	ldr	r3, [r3, #4]
 80005ce:	687a      	ldr	r2, [r7, #4]
 80005d0:	7852      	ldrb	r2, [r2, #1]
 80005d2:	3a08      	subs	r2, #8
 80005d4:	0092      	lsls	r2, r2, #2
 80005d6:	3202      	adds	r2, #2
 80005d8:	2102      	movs	r1, #2
 80005da:	fa01 f202 	lsl.w	r2, r1, r2
 80005de:	431a      	orrs	r2, r3
 80005e0:	68fb      	ldr	r3, [r7, #12]
 80005e2:	605a      	str	r2, [r3, #4]
}
 80005e4:	e02b      	b.n	800063e <MCAL_GPIO_voidInit+0x4ce>
        else if (config->mode == GPIO_MODE_AF_OPENDRAIN) {
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	789b      	ldrb	r3, [r3, #2]
 80005ea:	2b07      	cmp	r3, #7
 80005ec:	d127      	bne.n	800063e <MCAL_GPIO_voidInit+0x4ce>
            gpioTemp->CRH &= ~(0b1111 << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 80005ee:	68fb      	ldr	r3, [r7, #12]
 80005f0:	685b      	ldr	r3, [r3, #4]
 80005f2:	687a      	ldr	r2, [r7, #4]
 80005f4:	7852      	ldrb	r2, [r2, #1]
 80005f6:	3a08      	subs	r2, #8
 80005f8:	0092      	lsls	r2, r2, #2
 80005fa:	210f      	movs	r1, #15
 80005fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000600:	43d2      	mvns	r2, r2
 8000602:	401a      	ands	r2, r3
 8000604:	68fb      	ldr	r3, [r7, #12]
 8000606:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (config->speed << (GPIO_CRL_SHIFT * (config->pinNumber - 8)));
 8000608:	68fb      	ldr	r3, [r7, #12]
 800060a:	685b      	ldr	r3, [r3, #4]
 800060c:	687a      	ldr	r2, [r7, #4]
 800060e:	78d2      	ldrb	r2, [r2, #3]
 8000610:	4611      	mov	r1, r2
 8000612:	687a      	ldr	r2, [r7, #4]
 8000614:	7852      	ldrb	r2, [r2, #1]
 8000616:	3a08      	subs	r2, #8
 8000618:	0092      	lsls	r2, r2, #2
 800061a:	fa01 f202 	lsl.w	r2, r1, r2
 800061e:	431a      	orrs	r2, r3
 8000620:	68fb      	ldr	r3, [r7, #12]
 8000622:	605a      	str	r2, [r3, #4]
            gpioTemp->CRH |= (0b11 << ((GPIO_CRL_SHIFT * (config->pinNumber - 8)) + 2));
 8000624:	68fb      	ldr	r3, [r7, #12]
 8000626:	685b      	ldr	r3, [r3, #4]
 8000628:	687a      	ldr	r2, [r7, #4]
 800062a:	7852      	ldrb	r2, [r2, #1]
 800062c:	3a08      	subs	r2, #8
 800062e:	0092      	lsls	r2, r2, #2
 8000630:	3202      	adds	r2, #2
 8000632:	2103      	movs	r1, #3
 8000634:	fa01 f202 	lsl.w	r2, r1, r2
 8000638:	431a      	orrs	r2, r3
 800063a:	68fb      	ldr	r3, [r7, #12]
 800063c:	605a      	str	r2, [r3, #4]
}
 800063e:	bf00      	nop
 8000640:	3714      	adds	r7, #20
 8000642:	46bd      	mov	sp, r7
 8000644:	bc80      	pop	{r7}
 8000646:	4770      	bx	lr

08000648 <MCAL_GPIO_voidWritePin>:

GPIO_Pin_State_t MCAL_GPIO_voidReadPin(GPIO_RegDef_t* GPIOx, u8 pinNumber) {
    return ((GPIOx->IDR >> pinNumber) & 0x01);
}

void MCAL_GPIO_voidWritePin(GPIO_RegDef_t* GPIOx, u8 pinNumber, u8 value) {
 8000648:	b480      	push	{r7}
 800064a:	b083      	sub	sp, #12
 800064c:	af00      	add	r7, sp, #0
 800064e:	6078      	str	r0, [r7, #4]
 8000650:	460b      	mov	r3, r1
 8000652:	70fb      	strb	r3, [r7, #3]
 8000654:	4613      	mov	r3, r2
 8000656:	70bb      	strb	r3, [r7, #2]
    if (value == GPIO_PIN_SET) {
 8000658:	78bb      	ldrb	r3, [r7, #2]
 800065a:	2b01      	cmp	r3, #1
 800065c:	d109      	bne.n	8000672 <MCAL_GPIO_voidWritePin+0x2a>
        GPIOx->BSRR |= (1 << pinNumber);
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	691b      	ldr	r3, [r3, #16]
 8000662:	78fa      	ldrb	r2, [r7, #3]
 8000664:	2101      	movs	r1, #1
 8000666:	fa01 f202 	lsl.w	r2, r1, r2
 800066a:	431a      	orrs	r2, r3
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	611a      	str	r2, [r3, #16]
    }
    else {
        GPIOx->BRR |= (1 << pinNumber);
    }
}
 8000670:	e008      	b.n	8000684 <MCAL_GPIO_voidWritePin+0x3c>
        GPIOx->BRR |= (1 << pinNumber);
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	695b      	ldr	r3, [r3, #20]
 8000676:	78fa      	ldrb	r2, [r7, #3]
 8000678:	2101      	movs	r1, #1
 800067a:	fa01 f202 	lsl.w	r2, r1, r2
 800067e:	431a      	orrs	r2, r3
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	615a      	str	r2, [r3, #20]
}
 8000684:	bf00      	nop
 8000686:	370c      	adds	r7, #12
 8000688:	46bd      	mov	sp, r7
 800068a:	bc80      	pop	{r7}
 800068c:	4770      	bx	lr
	...

08000690 <MCAL_RCC_voidInit>:
  **************************
*/

#include "RCC_Interface.h"

void MCAL_RCC_voidInit(void) {
 8000690:	b480      	push	{r7}
 8000692:	af00      	add	r7, sp, #0
	switch (CLOCK_TYPE) {
		case RCC_HSI:
			SET_BIT(RCC->CR, RCC_CR_HSION_BIT);
 8000694:	4b15      	ldr	r3, [pc, #84]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	4a14      	ldr	r2, [pc, #80]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 800069a:	f043 0301 	orr.w	r3, r3, #1
 800069e:	6013      	str	r3, [r2, #0]
			while (!GET_BIT(RCC->CR, RCC_CR_HSIRDY_BIT));
 80006a0:	bf00      	nop
 80006a2:	4b12      	ldr	r3, [pc, #72]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	085b      	lsrs	r3, r3, #1
 80006a8:	f003 0301 	and.w	r3, r3, #1
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	d0f8      	beq.n	80006a2 <MCAL_RCC_voidInit+0x12>
			CLR_BIT(RCC->CFGR, RCC_CFGR_SW1_BIT);
 80006b0:	4b0e      	ldr	r3, [pc, #56]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006b2:	685b      	ldr	r3, [r3, #4]
 80006b4:	4a0d      	ldr	r2, [pc, #52]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006b6:	f023 0302 	bic.w	r3, r3, #2
 80006ba:	6053      	str	r3, [r2, #4]
			CLR_BIT(RCC->CFGR, RCC_CFGR_SW0_BIT);
 80006bc:	4b0b      	ldr	r3, [pc, #44]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006be:	685b      	ldr	r3, [r3, #4]
 80006c0:	4a0a      	ldr	r2, [pc, #40]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006c2:	f023 0301 	bic.w	r3, r3, #1
 80006c6:	6053      	str	r3, [r2, #4]
		break;
 80006c8:	bf00      	nop
		break;
		default:
		break;
	}

	RCC->CFGR |= (AHB_PRESCALE  << RCC_CFGR_HPRE_SHIFT);
 80006ca:	4b08      	ldr	r3, [pc, #32]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006cc:	4a07      	ldr	r2, [pc, #28]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006ce:	685b      	ldr	r3, [r3, #4]
 80006d0:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= (APB1_PRESCALE << RCC_CFGR_PPRE1_SHIFT);
 80006d2:	4b06      	ldr	r3, [pc, #24]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006d4:	4a05      	ldr	r2, [pc, #20]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006d6:	685b      	ldr	r3, [r3, #4]
 80006d8:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= (APB2_PRESCALE << RCC_CFGR_PPRE2_SHIFT);
 80006da:	4b04      	ldr	r3, [pc, #16]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006dc:	4a03      	ldr	r2, [pc, #12]	; (80006ec <MCAL_RCC_voidInit+0x5c>)
 80006de:	685b      	ldr	r3, [r3, #4]
 80006e0:	6053      	str	r3, [r2, #4]
}
 80006e2:	bf00      	nop
 80006e4:	46bd      	mov	sp, r7
 80006e6:	bc80      	pop	{r7}
 80006e8:	4770      	bx	lr
 80006ea:	bf00      	nop
 80006ec:	40021000 	.word	0x40021000

080006f0 <MCAL_RCC_voidEnablePeripheral>:

void MCAL_RCC_voidEnablePeripheral(const RCC_PeripheralId_t peripheralId) {
 80006f0:	b480      	push	{r7}
 80006f2:	b085      	sub	sp, #20
 80006f4:	af00      	add	r7, sp, #0
 80006f6:	6078      	str	r0, [r7, #4]
    u8 u8BusId = peripheralId >> 16;
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	0c1b      	lsrs	r3, r3, #16
 80006fc:	73fb      	strb	r3, [r7, #15]

    switch (u8BusId) {
 80006fe:	7bfb      	ldrb	r3, [r7, #15]
 8000700:	2b02      	cmp	r3, #2
 8000702:	d00f      	beq.n	8000724 <MCAL_RCC_voidEnablePeripheral+0x34>
 8000704:	2b03      	cmp	r3, #3
 8000706:	d018      	beq.n	800073a <MCAL_RCC_voidEnablePeripheral+0x4a>
 8000708:	2b01      	cmp	r3, #1
 800070a:	d000      	beq.n	800070e <MCAL_RCC_voidEnablePeripheral+0x1e>
        break;
        case (RCC_APB2_ID):
            SET_BIT(RCC->APB2ENR, peripheralId & 0xFFFF);
        break;
        default:
        break;
 800070c:	e020      	b.n	8000750 <MCAL_RCC_voidEnablePeripheral+0x60>
            SET_BIT(RCC->AHBENR, peripheralId & 0xFFFF);
 800070e:	4b13      	ldr	r3, [pc, #76]	; (800075c <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000710:	695a      	ldr	r2, [r3, #20]
 8000712:	2101      	movs	r1, #1
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	fa01 f303 	lsl.w	r3, r1, r3
 800071a:	b29b      	uxth	r3, r3
 800071c:	490f      	ldr	r1, [pc, #60]	; (800075c <MCAL_RCC_voidEnablePeripheral+0x6c>)
 800071e:	4313      	orrs	r3, r2
 8000720:	614b      	str	r3, [r1, #20]
        break;
 8000722:	e015      	b.n	8000750 <MCAL_RCC_voidEnablePeripheral+0x60>
            SET_BIT(RCC->APB1ENR, peripheralId & 0xFFFF);
 8000724:	4b0d      	ldr	r3, [pc, #52]	; (800075c <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000726:	69da      	ldr	r2, [r3, #28]
 8000728:	2101      	movs	r1, #1
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	fa01 f303 	lsl.w	r3, r1, r3
 8000730:	b29b      	uxth	r3, r3
 8000732:	490a      	ldr	r1, [pc, #40]	; (800075c <MCAL_RCC_voidEnablePeripheral+0x6c>)
 8000734:	4313      	orrs	r3, r2
 8000736:	61cb      	str	r3, [r1, #28]
        break;
 8000738:	e00a      	b.n	8000750 <MCAL_RCC_voidEnablePeripheral+0x60>
            SET_BIT(RCC->APB2ENR, peripheralId & 0xFFFF);
 800073a:	4b08      	ldr	r3, [pc, #32]	; (800075c <MCAL_RCC_voidEnablePeripheral+0x6c>)
 800073c:	699a      	ldr	r2, [r3, #24]
 800073e:	2101      	movs	r1, #1
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	fa01 f303 	lsl.w	r3, r1, r3
 8000746:	b29b      	uxth	r3, r3
 8000748:	4904      	ldr	r1, [pc, #16]	; (800075c <MCAL_RCC_voidEnablePeripheral+0x6c>)
 800074a:	4313      	orrs	r3, r2
 800074c:	618b      	str	r3, [r1, #24]
        break;
 800074e:	bf00      	nop
    }
}
 8000750:	bf00      	nop
 8000752:	3714      	adds	r7, #20
 8000754:	46bd      	mov	sp, r7
 8000756:	bc80      	pop	{r7}
 8000758:	4770      	bx	lr
 800075a:	bf00      	nop
 800075c:	40021000 	.word	0x40021000

08000760 <MCAL_SYSTICK_voidInit>:
 *      Author: Abdo
 */

#include "SYSTICK_Interface.h"

void MCAL_SYSTICK_voidInit(void) {
 8000760:	b480      	push	{r7}
 8000762:	af00      	add	r7, sp, #0
	if (SYSTICK_CLOCK_SOURCE == SYSTICK_AHB_DIV1) {
		SET_BIT(SYSTICK->CTRL, SYSTICK_CTRL_CLKSOURCE_BIT);
 8000764:	4b04      	ldr	r3, [pc, #16]	; (8000778 <MCAL_SYSTICK_voidInit+0x18>)
 8000766:	681b      	ldr	r3, [r3, #0]
 8000768:	4a03      	ldr	r2, [pc, #12]	; (8000778 <MCAL_SYSTICK_voidInit+0x18>)
 800076a:	f043 0304 	orr.w	r3, r3, #4
 800076e:	6013      	str	r3, [r2, #0]
	}
	else {
		CLR_BIT(SYSTICK->CTRL, SYSTICK_CTRL_CLKSOURCE_BIT);
	}
}
 8000770:	bf00      	nop
 8000772:	46bd      	mov	sp, r7
 8000774:	bc80      	pop	{r7}
 8000776:	4770      	bx	lr
 8000778:	e000e010 	.word	0xe000e010

0800077c <MCAL_SYSTICK_voidDelayMilliSeconds>:

void MCAL_SYSTICK_voidDelayMilliSeconds(u32 ms) {
 800077c:	b480      	push	{r7}
 800077e:	b083      	sub	sp, #12
 8000780:	af00      	add	r7, sp, #0
 8000782:	6078      	str	r0, [r7, #4]
	SYSTICK->LOAD = (SYSTEM_CLOCK / 1000) * ms - 1;
 8000784:	4b11      	ldr	r3, [pc, #68]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 8000786:	f04f 32ff 	mov.w	r2, #4294967295
 800078a:	605a      	str	r2, [r3, #4]
	SYSTICK->VAL = 0;
 800078c:	4b0f      	ldr	r3, [pc, #60]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 800078e:	2200      	movs	r2, #0
 8000790:	609a      	str	r2, [r3, #8]
	SET_BIT(SYSTICK->CTRL, SYSTICK_CTRL_ENABLE_BIT);
 8000792:	4b0e      	ldr	r3, [pc, #56]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	4a0d      	ldr	r2, [pc, #52]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 8000798:	f043 0301 	orr.w	r3, r3, #1
 800079c:	6013      	str	r3, [r2, #0]

	while (!(GET_BIT(SYSTICK->CTRL, SYSTICK_CTRL_COUNTFLAG_BIT)));
 800079e:	bf00      	nop
 80007a0:	4b0a      	ldr	r3, [pc, #40]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	0c1b      	lsrs	r3, r3, #16
 80007a6:	f003 0301 	and.w	r3, r3, #1
 80007aa:	2b00      	cmp	r3, #0
 80007ac:	d0f8      	beq.n	80007a0 <MCAL_SYSTICK_voidDelayMilliSeconds+0x24>

	CLR_BIT(SYSTICK->CTRL, SYSTICK_CTRL_ENABLE_BIT);
 80007ae:	4b07      	ldr	r3, [pc, #28]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 80007b0:	681b      	ldr	r3, [r3, #0]
 80007b2:	4a06      	ldr	r2, [pc, #24]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 80007b4:	f023 0301 	bic.w	r3, r3, #1
 80007b8:	6013      	str	r3, [r2, #0]
	SYSTICK->VAL = 0;
 80007ba:	4b04      	ldr	r3, [pc, #16]	; (80007cc <MCAL_SYSTICK_voidDelayMilliSeconds+0x50>)
 80007bc:	2200      	movs	r2, #0
 80007be:	609a      	str	r2, [r3, #8]
}
 80007c0:	bf00      	nop
 80007c2:	370c      	adds	r7, #12
 80007c4:	46bd      	mov	sp, r7
 80007c6:	bc80      	pop	{r7}
 80007c8:	4770      	bx	lr
 80007ca:	bf00      	nop
 80007cc:	e000e010 	.word	0xe000e010

080007d0 <MCAL_SYSTICK_voidDisableInterupt>:

void MCAL_SYSTICK_voidEnableInterupt(void) {
	SET_BIT(SYSTICK->CTRL, SYSTICK_CTRL_TICKINT_BIT);
}

void MCAL_SYSTICK_voidDisableInterupt(void) {
 80007d0:	b480      	push	{r7}
 80007d2:	af00      	add	r7, sp, #0
	CLR_BIT(SYSTICK->CTRL, SYSTICK_CTRL_TICKINT_BIT);
 80007d4:	4b04      	ldr	r3, [pc, #16]	; (80007e8 <MCAL_SYSTICK_voidDisableInterupt+0x18>)
 80007d6:	681b      	ldr	r3, [r3, #0]
 80007d8:	4a03      	ldr	r2, [pc, #12]	; (80007e8 <MCAL_SYSTICK_voidDisableInterupt+0x18>)
 80007da:	f023 0302 	bic.w	r3, r3, #2
 80007de:	6013      	str	r3, [r2, #0]
}
 80007e0:	bf00      	nop
 80007e2:	46bd      	mov	sp, r7
 80007e4:	bc80      	pop	{r7}
 80007e6:	4770      	bx	lr
 80007e8:	e000e010 	.word	0xe000e010

080007ec <SysTick_Handler>:

	MCAL_SYSTICK_voidEnableInterupt();
	SET_BIT(SYSTICK->CTRL, SYSTICK_CTRL_ENABLE_BIT);
}

void SysTick_Handler(void) {
 80007ec:	b580      	push	{r7, lr}
 80007ee:	af00      	add	r7, sp, #0
	SYSTICK_CallBack();
 80007f0:	4b06      	ldr	r3, [pc, #24]	; (800080c <SysTick_Handler+0x20>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	4798      	blx	r3
	if (SYSTICK_INT_MODE == SYSTICK_INT_NON_PERIODIC) {
		CLR_BIT(SYSTICK->CTRL, SYSTICK_CTRL_ENABLE_BIT);
 80007f6:	4b06      	ldr	r3, [pc, #24]	; (8000810 <SysTick_Handler+0x24>)
 80007f8:	681b      	ldr	r3, [r3, #0]
 80007fa:	4a05      	ldr	r2, [pc, #20]	; (8000810 <SysTick_Handler+0x24>)
 80007fc:	f023 0301 	bic.w	r3, r3, #1
 8000800:	6013      	str	r3, [r2, #0]
		MCAL_SYSTICK_voidDisableInterupt();
 8000802:	f7ff ffe5 	bl	80007d0 <MCAL_SYSTICK_voidDisableInterupt>
	}
	else {

	}
}
 8000806:	bf00      	nop
 8000808:	bd80      	pop	{r7, pc}
 800080a:	bf00      	nop
 800080c:	2000001c 	.word	0x2000001c
 8000810:	e000e010 	.word	0xe000e010

08000814 <main>:

#include "../MCAL/RCC/RCC_Interface.h"
#include "../MCAL/GPIO/GPIO_Interface.h"
#include "../MCAL/SYSTICK/SYSTICK_Interface.h"

int main(void) {
 8000814:	b580      	push	{r7, lr}
 8000816:	b082      	sub	sp, #8
 8000818:	af00      	add	r7, sp, #0
    MCAL_RCC_voidInit();
 800081a:	f7ff ff39 	bl	8000690 <MCAL_RCC_voidInit>
    MCAL_RCC_voidEnablePeripheral(RCC_APB2_GPIOC);
 800081e:	4812      	ldr	r0, [pc, #72]	; (8000868 <main+0x54>)
 8000820:	f7ff ff66 	bl	80006f0 <MCAL_RCC_voidEnablePeripheral>

    MCAL_SYSTICK_voidInit();
 8000824:	f7ff ff9c 	bl	8000760 <MCAL_SYSTICK_voidInit>

    GPIO_Config_t led;
    led.port = GPIO_PORTC;
 8000828:	2302      	movs	r3, #2
 800082a:	713b      	strb	r3, [r7, #4]
    led.pinNumber = 15;
 800082c:	230f      	movs	r3, #15
 800082e:	717b      	strb	r3, [r7, #5]
    led.mode = GPIO_MODE_OUTPUT_PUSHPULL;
 8000830:	2304      	movs	r3, #4
 8000832:	71bb      	strb	r3, [r7, #6]
    led.speed = GPIO_SPEED_2MHZ;
 8000834:	2302      	movs	r3, #2
 8000836:	71fb      	strb	r3, [r7, #7]

    MCAL_GPIO_voidInit(&led);
 8000838:	1d3b      	adds	r3, r7, #4
 800083a:	4618      	mov	r0, r3
 800083c:	f7ff fc98 	bl	8000170 <MCAL_GPIO_voidInit>

    while (1) {
    	MCAL_GPIO_voidWritePin(GPIOC, 15, GPIO_PIN_SET);
 8000840:	2201      	movs	r2, #1
 8000842:	210f      	movs	r1, #15
 8000844:	4809      	ldr	r0, [pc, #36]	; (800086c <main+0x58>)
 8000846:	f7ff feff 	bl	8000648 <MCAL_GPIO_voidWritePin>
    	MCAL_SYSTICK_voidDelayMilliSeconds(500);
 800084a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800084e:	f7ff ff95 	bl	800077c <MCAL_SYSTICK_voidDelayMilliSeconds>
    	MCAL_GPIO_voidWritePin(GPIOC, 15, GPIO_PIN_RESET);
 8000852:	2200      	movs	r2, #0
 8000854:	210f      	movs	r1, #15
 8000856:	4805      	ldr	r0, [pc, #20]	; (800086c <main+0x58>)
 8000858:	f7ff fef6 	bl	8000648 <MCAL_GPIO_voidWritePin>
    	MCAL_SYSTICK_voidDelayMilliSeconds(500);
 800085c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000860:	f7ff ff8c 	bl	800077c <MCAL_SYSTICK_voidDelayMilliSeconds>
    	MCAL_GPIO_voidWritePin(GPIOC, 15, GPIO_PIN_SET);
 8000864:	e7ec      	b.n	8000840 <main+0x2c>
 8000866:	bf00      	nop
 8000868:	00030004 	.word	0x00030004
 800086c:	40011000 	.word	0x40011000

08000870 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000870:	480d      	ldr	r0, [pc, #52]	; (80008a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000872:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000874:	480d      	ldr	r0, [pc, #52]	; (80008ac <LoopForever+0x6>)
  ldr r1, =_edata
 8000876:	490e      	ldr	r1, [pc, #56]	; (80008b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000878:	4a0e      	ldr	r2, [pc, #56]	; (80008b4 <LoopForever+0xe>)
  movs r3, #0
 800087a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800087c:	e002      	b.n	8000884 <LoopCopyDataInit>

0800087e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800087e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000880:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000882:	3304      	adds	r3, #4

08000884 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000884:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000886:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000888:	d3f9      	bcc.n	800087e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800088a:	4a0b      	ldr	r2, [pc, #44]	; (80008b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 800088c:	4c0b      	ldr	r4, [pc, #44]	; (80008bc <LoopForever+0x16>)
  movs r3, #0
 800088e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000890:	e001      	b.n	8000896 <LoopFillZerobss>

08000892 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000892:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000894:	3204      	adds	r2, #4

08000896 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000896:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000898:	d3fb      	bcc.n	8000892 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800089a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800089e:	f000 f811 	bl	80008c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008a2:	f7ff ffb7 	bl	8000814 <main>

080008a6 <LoopForever>:

LoopForever:
    b LoopForever
 80008a6:	e7fe      	b.n	80008a6 <LoopForever>
  ldr   r0, =_estack
 80008a8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80008ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80008b4:	0800092c 	.word	0x0800092c
  ldr r2, =_sbss
 80008b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80008bc:	20000020 	.word	0x20000020

080008c0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008c0:	e7fe      	b.n	80008c0 <ADC1_2_IRQHandler>
	...

080008c4 <__libc_init_array>:
 80008c4:	b570      	push	{r4, r5, r6, lr}
 80008c6:	2500      	movs	r5, #0
 80008c8:	4e0c      	ldr	r6, [pc, #48]	; (80008fc <__libc_init_array+0x38>)
 80008ca:	4c0d      	ldr	r4, [pc, #52]	; (8000900 <__libc_init_array+0x3c>)
 80008cc:	1ba4      	subs	r4, r4, r6
 80008ce:	10a4      	asrs	r4, r4, #2
 80008d0:	42a5      	cmp	r5, r4
 80008d2:	d109      	bne.n	80008e8 <__libc_init_array+0x24>
 80008d4:	f000 f81a 	bl	800090c <_init>
 80008d8:	2500      	movs	r5, #0
 80008da:	4e0a      	ldr	r6, [pc, #40]	; (8000904 <__libc_init_array+0x40>)
 80008dc:	4c0a      	ldr	r4, [pc, #40]	; (8000908 <__libc_init_array+0x44>)
 80008de:	1ba4      	subs	r4, r4, r6
 80008e0:	10a4      	asrs	r4, r4, #2
 80008e2:	42a5      	cmp	r5, r4
 80008e4:	d105      	bne.n	80008f2 <__libc_init_array+0x2e>
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80008ec:	4798      	blx	r3
 80008ee:	3501      	adds	r5, #1
 80008f0:	e7ee      	b.n	80008d0 <__libc_init_array+0xc>
 80008f2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80008f6:	4798      	blx	r3
 80008f8:	3501      	adds	r5, #1
 80008fa:	e7f2      	b.n	80008e2 <__libc_init_array+0x1e>
 80008fc:	08000924 	.word	0x08000924
 8000900:	08000924 	.word	0x08000924
 8000904:	08000924 	.word	0x08000924
 8000908:	08000928 	.word	0x08000928

0800090c <_init>:
 800090c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800090e:	bf00      	nop
 8000910:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000912:	bc08      	pop	{r3}
 8000914:	469e      	mov	lr, r3
 8000916:	4770      	bx	lr

08000918 <_fini>:
 8000918:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800091a:	bf00      	nop
 800091c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800091e:	bc08      	pop	{r3}
 8000920:	469e      	mov	lr, r3
 8000922:	4770      	bx	lr
